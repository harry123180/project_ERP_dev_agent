{"version":3,"file":"Query-ef68a652.js","sources":["../../src/views/inventory/Query.vue"],"sourcesContent":["<template>\r\n  <div class=\"inventory-query\">\r\n    <!-- Search Filters Section -->\r\n    <div class=\"search-section\">\r\n      <el-card class=\"filter-card\">\r\n        <template #header>\r\n          <div class=\"card-header\">\r\n            <span>庫存查詢條件</span>\r\n            <el-button size=\"small\" @click=\"resetFilters\">重置</el-button>\r\n          </div>\r\n        </template>\r\n        \r\n        <el-form :model=\"filters\" label-width=\"100px\" :inline=\"true\">\r\n          <el-form-item label=\"物料名稱\">\r\n            <el-input v-model=\"filters.name\" placeholder=\"輸入物料名稱\" clearable style=\"width: 200px\" @keyup.enter=\"searchInventory\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"規格說明\">\r\n            <el-input v-model=\"filters.spec\" placeholder=\"輸入規格說明\" clearable style=\"width: 200px\" @keyup.enter=\"searchInventory\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"請購單號\">\r\n            <el-input v-model=\"filters.request_no\" placeholder=\"輸入請購單號\" clearable style=\"width: 200px\" @keyup.enter=\"searchInventory\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"採購單號\">\r\n            <el-input v-model=\"filters.po_no\" placeholder=\"輸入採購單號\" clearable style=\"width: 200px\" @keyup.enter=\"searchInventory\" />\r\n          </el-form-item>\r\n        </el-form>\r\n        \r\n        <el-form :model=\"filters\" label-width=\"100px\" :inline=\"true\">\r\n          <el-form-item label=\"儲存區域\">\r\n            <el-select v-model=\"filters.zone\" placeholder=\"選擇區域\" clearable style=\"width: 120px\">\r\n              <el-option v-for=\"zone in availableZones\" :key=\"zone\" :label=\"zone\" :value=\"zone\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"貨架\">\r\n            <el-select v-model=\"filters.shelf\" placeholder=\"選擇貨架\" clearable style=\"width: 100px\">\r\n              <el-option v-for=\"shelf in availableShelves\" :key=\"shelf\" :label=\"shelf\" :value=\"shelf\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"樓層\">\r\n            <el-select v-model=\"filters.floor\" placeholder=\"選擇樓層\" clearable style=\"width: 100px\">\r\n              <el-option v-for=\"floor in availableFloors\" :key=\"floor\" :label=\"`第${floor}層`\" :value=\"floor\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"searchInventory\" :loading=\"loading\">\r\n              <el-icon><Search /></el-icon>\r\n              查詢\r\n            </el-button>\r\n            <el-button @click=\"exportInventory\" :disabled=\"!inventoryItems.length\">\r\n              <el-icon><Download /></el-icon>\r\n              匯出\r\n            </el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- Inventory Results Table -->\r\n    <div class=\"results-section\">\r\n      <el-card>\r\n        <template #header>\r\n          <div class=\"card-header\">\r\n            <span>庫存清單 ({{ inventoryItems.length }} 筆)</span>\r\n            <div>\r\n              <el-button size=\"small\" @click=\"refreshData\">\r\n                <el-icon><Refresh /></el-icon>\r\n                重新整理\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        \r\n        <el-table \r\n          :data=\"inventoryItems\" \r\n          v-loading=\"loading\"\r\n          stripe\r\n        >\r\n          <el-table-column prop=\"item_name\" label=\"物料名稱\" width=\"180\">\r\n            <template #default=\"{ row }\">\r\n              <div class=\"item-info\">\r\n                <div class=\"item-name\">{{ row.item_name }}</div>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"item_specification\" label=\"規格\" width=\"200\">\r\n            <template #default=\"{ row }\">\r\n              <div class=\"item-spec-column\">{{ row.item_specification || '-' }}</div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"usage_type\" label=\"用途\" width=\"100\" align=\"center\">\r\n            <template #default=\"{ row }\">\r\n              <el-tag size=\"small\" :type=\"getUsageTagType(row.usage_type)\">\r\n                {{ getUsageLabel(row.usage_type) }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"total_quantity\" label=\"總庫存數量\" width=\"120\" align=\"right\">\r\n            <template #default=\"{ row }\">\r\n              <el-tag :type=\"getQuantityTagType(row.total_quantity)\">\r\n                {{ row.total_quantity }} {{ row.unit }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"batch_count\" label=\"批次數量\" width=\"90\" align=\"center\">\r\n            <template #default=\"{ row }\">\r\n              <el-badge :value=\"row.batch_count\" type=\"primary\">\r\n                <el-tag size=\"small\" type=\"info\">{{ row.batch_count }} 批</el-tag>\r\n              </el-badge>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"storage_location_count\" label=\"儲存位置\" width=\"100\" align=\"center\">\r\n            <template #default=\"{ row }\">\r\n              <el-tag size=\"small\" type=\"success\">{{ row.storage_location_count }} 個位置</el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"last_received_date\" label=\"最近收貨\" width=\"100\">\r\n            <template #default=\"{ row }\">\r\n              {{ formatDate(row.last_received_date) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"240\" fixed=\"right\">\r\n            <template #default=\"{ row }\">\r\n              <el-button size=\"small\" type=\"primary\" @click=\"viewItemDetails(row)\">\r\n                <el-icon><View /></el-icon>\r\n                詳情\r\n              </el-button>\r\n              <el-button size=\"small\" type=\"info\" @click=\"viewItemHistory(row)\">\r\n                <el-icon><Clock /></el-icon>\r\n                履歷\r\n              </el-button>\r\n              <el-button size=\"small\" @click=\"showIssueDialog(row)\">\r\n                <el-icon><Minus /></el-icon>\r\n                領用\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- Issue Item Dialog -->\r\n    <el-dialog v-model=\"issueDialogVisible\" title=\"物料領用\" width=\"500px\">\r\n      <el-form :model=\"issueForm\" :rules=\"issueRules\" ref=\"issueFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"物料名稱\">\r\n          <el-input :value=\"selectedItem?.item_name\" disabled />\r\n        </el-form-item>\r\n        <el-form-item label=\"可用數量\">\r\n          <el-input :value=\"`${selectedItem?.total_quantity || 0} ${selectedItem?.unit || ''}`\" disabled />\r\n        </el-form-item>\r\n        <el-alert\r\n          title=\"注意\"\r\n          description=\"此物料有多個批次，請前往詳情頁面選擇特定批次進行領用\"\r\n          type=\"info\"\r\n          show-icon\r\n          :closable=\"false\"\r\n          style=\"margin-bottom: 15px;\"\r\n        />\r\n        <el-form-item label=\"領用數量\" prop=\"quantity\">\r\n          <el-input-number \r\n            v-model=\"issueForm.quantity\" \r\n            :min=\"0.01\" \r\n            :max=\"selectedItem?.current_quantity || 0\"\r\n            :precision=\"2\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"用途類型\" prop=\"usage_type\">\r\n          <el-select v-model=\"issueForm.usage_type\" style=\"width: 100%\">\r\n            <el-option label=\"日常使用\" value=\"daily\" />\r\n            <el-option label=\"專案使用\" value=\"project\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"備註\">\r\n          <el-input v-model=\"issueForm.note\" type=\"textarea\" rows=\"3\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"issueDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmIssue\" :loading=\"issueLoading\">確認領用</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, reactive, onMounted, watch, computed } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { Search, Download, Refresh, Minus, Clock, View } from '@element-plus/icons-vue'\r\nimport { inventoryApi, type InventoryFilters } from '@/api/inventory'\r\nimport { useRouter } from 'vue-router'\r\n\r\n// Router\r\nconst router = useRouter()\r\n\r\n// Reactive data\r\nconst loading = ref(false)\r\nconst inventoryItems = ref<any[]>([])\r\nconst storageTree = ref<any[]>([])\r\n\r\n// Search filters\r\nconst filters = reactive<InventoryFilters>({\r\n  name: '',\r\n  spec: '',\r\n  request_no: '',\r\n  po_no: '',\r\n  zone: '',\r\n  shelf: '',\r\n  floor: undefined\r\n})\r\n\r\n// Computed options based on storage tree\r\nconst availableZones = computed(() => {\r\n  return storageTree.value.map(area => area.area_code)\r\n})\r\n\r\nconst availableShelves = computed(() => {\r\n  if (!filters.zone) return []\r\n  const selectedZone = storageTree.value.find(area => area.area_code === filters.zone)\r\n  if (!selectedZone) return []\r\n  return selectedZone.shelves.map((shelf: any) => shelf.shelf_code)\r\n})\r\n\r\nconst availableFloors = computed(() => {\r\n  if (!filters.zone || !filters.shelf) return []\r\n  const selectedZone = storageTree.value.find(area => area.area_code === filters.zone)\r\n  if (!selectedZone) return []\r\n  const selectedShelf = selectedZone.shelves.find((shelf: any) => shelf.shelf_code === filters.shelf)\r\n  if (!selectedShelf) return []\r\n  return selectedShelf.floors.map((floor: any) => floor.floor_level)\r\n})\r\n\r\n// Watch for zone changes to reset dependent fields\r\nwatch(() => filters.zone, (newZone) => {\r\n  if (!newZone) {\r\n    filters.shelf = ''\r\n    filters.floor = undefined\r\n  } else {\r\n    // Check if current shelf is still valid\r\n    if (filters.shelf && !availableShelves.value.includes(filters.shelf)) {\r\n      filters.shelf = ''\r\n      filters.floor = undefined\r\n    }\r\n  }\r\n})\r\n\r\n// Watch for shelf changes to reset floor\r\nwatch(() => filters.shelf, (newShelf) => {\r\n  if (!newShelf) {\r\n    filters.floor = undefined\r\n  } else {\r\n    // Check if current floor is still valid\r\n    if (filters.floor && !availableFloors.value.includes(filters.floor)) {\r\n      filters.floor = undefined\r\n    }\r\n  }\r\n})\r\n\r\n// Issue dialog\r\nconst issueDialogVisible = ref(false)\r\nconst issueLoading = ref(false)\r\nconst selectedItem = ref<any>(null)\r\nconst issueForm = reactive({\r\n  quantity: 0,\r\n  usage_type: 'daily',\r\n  note: ''\r\n})\r\nconst issueFormRef = ref()\r\n\r\n// Form rules\r\nconst issueRules = {\r\n  quantity: [\r\n    { required: true, message: '請輸入領用數量', trigger: 'blur' },\r\n    { type: 'number', min: 0.01, message: '領用數量必須大於0', trigger: 'blur' }\r\n  ],\r\n  usage_type: [\r\n    { required: true, message: '請選擇用途類型', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// Methods\r\nconst loadStorageTree = async () => {\r\n  try {\r\n    const tree = await inventoryApi.getStorageTree()\r\n    storageTree.value = tree\r\n  } catch (error) {\r\n    console.error('Failed to load storage tree:', error)\r\n    // Use fallback values if API fails\r\n    storageTree.value = [\r\n      {\r\n        area_code: 'Z1',\r\n        shelves: [\r\n          { shelf_code: 'A', floors: [{ floor_level: 1 }, { floor_level: 2 }, { floor_level: 3 }] },\r\n          { shelf_code: 'B', floors: [{ floor_level: 1 }, { floor_level: 2 }, { floor_level: 3 }] }\r\n        ]\r\n      },\r\n      {\r\n        area_code: 'Z2',\r\n        shelves: [\r\n          { shelf_code: 'A', floors: [{ floor_level: 1 }, { floor_level: 2 }, { floor_level: 3 }] },\r\n          { shelf_code: 'B', floors: [{ floor_level: 1 }, { floor_level: 2 }, { floor_level: 3 }] }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nconst searchInventory = async () => {\r\n  try {\r\n    loading.value = true\r\n    // Build query params from filters\r\n    const queryParams: any = {}\r\n    \r\n    if (filters.name) queryParams.name = filters.name\r\n    if (filters.spec) queryParams.spec = filters.spec\r\n    if (filters.request_no) queryParams.request_no = filters.request_no\r\n    if (filters.po_no) queryParams.po_no = filters.po_no\r\n    if (filters.zone) queryParams.zone = filters.zone\r\n    if (filters.shelf) queryParams.shelf = filters.shelf\r\n    if (filters.floor) queryParams.floor = filters.floor\r\n    \r\n    // Use new grouped inventory API through the API service\r\n    const data = await inventoryApi.getInventoryItemsGrouped(queryParams)\r\n    inventoryItems.value = data\r\n    \r\n    if (data.length === 0) {\r\n      ElMessage.info('未找到符合條件的庫存資料')\r\n    } else {\r\n      ElMessage.success(`找到 ${data.length} 筆庫存資料`)\r\n    }\r\n  } catch (error) {\r\n    console.error('Query inventory error:', error)\r\n    ElMessage.error('查詢庫存失敗')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst resetFilters = () => {\r\n  Object.assign(filters, {\r\n    name: '',\r\n    spec: '',\r\n    request_no: '',\r\n    po_no: '',\r\n    zone: '',\r\n    shelf: '',\r\n    floor: undefined\r\n  })\r\n  searchInventory()\r\n}\r\n\r\nconst refreshData = () => {\r\n  searchInventory()\r\n}\r\n\r\nconst viewItemDetails = (item: any) => {\r\n  router.push(`/inventory/items/${encodeURIComponent(item.item_key)}/details`)\r\n}\r\n\r\nconst viewItemHistory = (item: any) => {\r\n  router.push(`/inventory/items/${encodeURIComponent(item.item_key)}/details?tab=history`)\r\n}\r\n\r\nconst showIssueDialog = (item: any) => {\r\n  selectedItem.value = item\r\n  issueForm.quantity = 1\r\n  issueForm.usage_type = 'daily'\r\n  issueForm.note = ''\r\n  issueDialogVisible.value = true\r\n}\r\n\r\nconst confirmIssue = async () => {\r\n  try {\r\n    await issueFormRef.value?.validate()\r\n    issueLoading.value = true\r\n    \r\n    // Note: For grouped items, we need to implement batch selection for issuing\r\n    // This is a placeholder - in Phase 1, we'll show a message\r\n    ElMessage.info('批次物料領用功能將在後續版本中實現，請使用詳情頁面進行操作')\r\n    issueDialogVisible.value = false\r\n    \r\n  } catch (error) {\r\n    ElMessage.error('物料領用失敗')\r\n  } finally {\r\n    issueLoading.value = false\r\n  }\r\n}\r\n\r\nconst exportInventory = async () => {\r\n  try {\r\n    const blob = await inventoryApi.exportInventory(filters)\r\n    const url = window.URL.createObjectURL(blob)\r\n    const link = document.createElement('a')\r\n    link.href = url\r\n    link.download = `inventory_${new Date().toISOString().split('T')[0]}.xlsx`\r\n    link.click()\r\n    window.URL.revokeObjectURL(url)\r\n    ElMessage.success('匯出成功')\r\n  } catch (error) {\r\n    ElMessage.error('匯出失敗')\r\n  }\r\n}\r\n\r\nconst viewSource = (sourceNo: string) => {\r\n  // Navigate to source document\r\n  ElMessage.info(`檢視來源單號: ${sourceNo}`)\r\n}\r\n\r\nconst formatDate = (dateString: string) => {\r\n  if (!dateString) return '-'\r\n  return new Date(dateString).toLocaleDateString('zh-TW')\r\n}\r\n\r\nconst getQuantityTagType = (quantity: number) => {\r\n  if (quantity <= 0) return 'danger'\r\n  if (quantity <= 10) return 'warning'\r\n  return 'success'\r\n}\r\n\r\nconst getUsageTagType = (usageType: string) => {\r\n  switch (usageType) {\r\n    case 'daily': return 'info'\r\n    case 'project': return 'warning'\r\n    case 'production': return 'success'\r\n    case 'maintenance': return 'danger'\r\n    default: return ''\r\n  }\r\n}\r\n\r\nconst getUsageLabel = (usageType: string) => {\r\n  const usageMap: Record<string, string> = {\r\n    'daily': '日常使用',\r\n    'project': '專案使用',\r\n    'production': '生產用',\r\n    'maintenance': '維護用',\r\n    'office': '辦公用',\r\n    'it': 'IT設備'\r\n  }\r\n  return usageMap[usageType] || usageType || '一般'\r\n}\r\n\r\n// Initialize\r\nonMounted(async () => {\r\n  await loadStorageTree()\r\n  searchInventory()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.inventory-query {\r\n  padding: 20px;\r\n}\r\n\r\n.search-section, .results-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.filter-card .el-form {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.item-info .item-name {\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.item-spec-column {\r\n  font-size: 13px;\r\n  color: #606266;\r\n  line-height: 1.4;\r\n}\r\n\r\n.storage-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.storage-details {\r\n  font-size: 12px;\r\n  color: #666;\r\n}\r\n</style>"],"names":["router","useRouter","loading","ref","inventoryItems","storageTree","filters","reactive","availableZones","computed","area","availableShelves","selectedZone","shelf","availableFloors","selectedShelf","floor","watch","newZone","newShelf","issueDialogVisible","issueLoading","selectedItem","issueForm","issueFormRef","issueRules","loadStorageTree","tree","inventoryApi","error","searchInventory","queryParams","data","ElMessage","resetFilters","refreshData","viewItemDetails","item","viewItemHistory","showIssueDialog","confirmIssue","_a","exportInventory","blob","url","link","formatDate","dateString","getQuantityTagType","quantity","getUsageTagType","usageType","getUsageLabel","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_card","_withCtx","_hoisted_3","_cache","_component_el_button","_createTextVNode","_component_el_form","_component_el_form_item","_component_el_input","$event","_withKeys","_component_el_select","_Fragment","_renderList","zone","_component_el_icon","_unref","Search","Download","_hoisted_5","_toDisplayString","Refresh","_withDirectives","_createBlock","_component_el_table","_component_el_table_column","_hoisted_6","_hoisted_7","row","_hoisted_8","_component_el_tag","_component_el_badge","View","Clock","Minus","_b","_component_el_input_number","_component_el_option"],"mappings":"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"}