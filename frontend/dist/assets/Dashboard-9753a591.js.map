{"version":3,"file":"Dashboard-9753a591.js","sources":["../../src/stores/procurement.ts","../../src/stores/inventory.ts","../../src/stores/accounting.ts","../../src/views/Dashboard.vue"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { procurementApi } from '@/api'\r\nimport type { PurchaseOrder } from '@/types/common'\r\nimport type { \r\n  BuildCandidatesResponse,\r\n  CreatePORequest,\r\n  POFilters,\r\n  WithdrawPORequest,\r\n  ReorganizePORequest\r\n} from '@/api/procurement'\r\nimport { handleApiError } from '@/api'\r\n\r\nexport const useProcurementStore = defineStore('procurement', () => {\r\n  // State\r\n  const purchaseOrders = ref<PurchaseOrder[]>([])\r\n  const buildCandidates = ref<BuildCandidatesResponse | null>(null)\r\n  const currentPO = ref<PurchaseOrder | null>(null)\r\n  const loading = ref(false)\r\n  const pagination = ref({\r\n    page: 1,\r\n    page_size: 20,\r\n    total: 0,\r\n    pages: 0\r\n  })\r\n  const filters = ref<POFilters>({\r\n    status: '',\r\n    supplier_id: '',\r\n    page: 1,\r\n    page_size: 20\r\n  })\r\n\r\n  // Getters\r\n  const poBySupplier = computed(() => {\r\n    const grouped: Record<string, PurchaseOrder[]> = {}\r\n    purchaseOrders.value.forEach(po => {\r\n      const supplierId = po.supplier_id\r\n      if (!grouped[supplierId]) {\r\n        grouped[supplierId] = []\r\n      }\r\n      grouped[supplierId].push(po)\r\n    })\r\n    return grouped\r\n  })\r\n\r\n  const activePOs = computed(() => \r\n    purchaseOrders.value.filter(po => po.purchase_status === 'order_created')\r\n  )\r\n\r\n  const poById = computed(() => (poNo: string) => \r\n    purchaseOrders.value.find(po => po.purchase_order_no === poNo)\r\n  )\r\n\r\n  // Actions\r\n  const fetchBuildCandidates = async () => {\r\n    try {\r\n      loading.value = true\r\n      const candidates = await procurementApi.getBuildCandidates()\r\n      buildCandidates.value = candidates\r\n      return candidates\r\n    } catch (error) {\r\n      handleApiError(error, '獲取採購建單候選項失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const createPO = async (data: CreatePORequest) => {\r\n    try {\r\n      loading.value = true\r\n      const po = await procurementApi.createPO(data)\r\n      purchaseOrders.value.unshift(po)\r\n      ElMessage.success('採購單創建成功')\r\n      \r\n      // Refresh build candidates to remove used items\r\n      await fetchBuildCandidates()\r\n      \r\n      return po\r\n    } catch (error) {\r\n      handleApiError(error, '創建採購單失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const fetchPurchaseOrders = async (newFilters?: Partial<POFilters>) => {\r\n    try {\r\n      loading.value = true\r\n      if (newFilters) {\r\n        filters.value = { ...filters.value, ...newFilters }\r\n      }\r\n\r\n      const response = await procurementApi.getPurchaseOrders(filters.value)\r\n      purchaseOrders.value = response.items\r\n      pagination.value = response.pagination\r\n    } catch (error) {\r\n      handleApiError(error, '獲取採購單列表失敗')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const fetchPurchaseOrderDetail = async (poNo: string) => {\r\n    try {\r\n      loading.value = true\r\n      const po = await procurementApi.getPurchaseOrder(poNo)\r\n      currentPO.value = po\r\n      return po\r\n    } catch (error) {\r\n      handleApiError(error, '獲取採購單詳情失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const updatePurchaseOrder = async (poNo: string, data: Partial<CreatePORequest>) => {\r\n    try {\r\n      loading.value = true\r\n      const updatedPO = await procurementApi.updatePurchaseOrder(poNo, data)\r\n      \r\n      // Update in list\r\n      const index = purchaseOrders.value.findIndex(po => po.purchase_order_no === poNo)\r\n      if (index !== -1) {\r\n        purchaseOrders.value[index] = updatedPO\r\n      }\r\n      \r\n      // Update current if it's the same one\r\n      if (currentPO.value?.purchase_order_no === poNo) {\r\n        currentPO.value = updatedPO\r\n      }\r\n\r\n      ElMessage.success('採購單更新成功')\r\n      return updatedPO\r\n    } catch (error) {\r\n      handleApiError(error, '更新採購單失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const confirmPurchase = async (poNo: string) => {\r\n    try {\r\n      loading.value = true\r\n      const confirmedPO = await procurementApi.confirmPurchase(poNo)\r\n      \r\n      // Update in list\r\n      const index = purchaseOrders.value.findIndex(po => po.purchase_order_no === poNo)\r\n      if (index !== -1) {\r\n        purchaseOrders.value[index] = confirmedPO\r\n      }\r\n      \r\n      // Update current if it's the same one\r\n      if (currentPO.value?.purchase_order_no === poNo) {\r\n        currentPO.value = confirmedPO\r\n      }\r\n\r\n      ElMessage.success('採購單確認成功')\r\n      return confirmedPO\r\n    } catch (error) {\r\n      handleApiError(error, '確認採購單失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const withdrawPO = async (poNo: string, data: WithdrawPORequest) => {\r\n    try {\r\n      loading.value = true\r\n      const withdrawnPO = await procurementApi.withdrawPO(poNo, data)\r\n      \r\n      // Update in list\r\n      const index = purchaseOrders.value.findIndex(po => po.purchase_order_no === poNo)\r\n      if (index !== -1) {\r\n        purchaseOrders.value[index] = withdrawnPO\r\n      }\r\n      \r\n      // Update current if it's the same one\r\n      if (currentPO.value?.purchase_order_no === poNo) {\r\n        currentPO.value = withdrawnPO\r\n      }\r\n\r\n      ElMessage.success('採購單已撤回')\r\n      return withdrawnPO\r\n    } catch (error) {\r\n      handleApiError(error, '撤回採購單失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const reorganizePO = async (poNo: string, data: ReorganizePORequest) => {\r\n    try {\r\n      loading.value = true\r\n      const reorganizedPO = await procurementApi.reorganizePO(poNo, data)\r\n      \r\n      // Update in list\r\n      const index = purchaseOrders.value.findIndex(po => po.purchase_order_no === poNo)\r\n      if (index !== -1) {\r\n        purchaseOrders.value[index] = reorganizedPO\r\n      }\r\n      \r\n      // Update current if it's the same one\r\n      if (currentPO.value?.purchase_order_no === poNo) {\r\n        currentPO.value = reorganizedPO\r\n      }\r\n\r\n      ElMessage.success('採購單重組成功')\r\n      return reorganizedPO\r\n    } catch (error) {\r\n      handleApiError(error, '重組採購單失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const clearCurrentPO = () => {\r\n    currentPO.value = null\r\n  }\r\n\r\n  const clearBuildCandidates = () => {\r\n    buildCandidates.value = null\r\n  }\r\n\r\n  return {\r\n    // State\r\n    purchaseOrders,\r\n    buildCandidates,\r\n    currentPO,\r\n    loading,\r\n    pagination,\r\n    filters,\r\n\r\n    // Getters\r\n    poBySupplier,\r\n    activePOs,\r\n    poById,\r\n\r\n    // Actions\r\n    fetchBuildCandidates,\r\n    createPO,\r\n    fetchPurchaseOrders,\r\n    fetchPurchaseOrderDetail,\r\n    updatePurchaseOrder,\r\n    confirmPurchase,\r\n    withdrawPO,\r\n    reorganizePO,\r\n    clearCurrentPO,\r\n    clearBuildCandidates\r\n  }\r\n})","import { defineStore } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { inventoryApi, receivingApi, storageApi } from '@/api'\r\nimport type { \r\n  InventoryItem,\r\n  InventoryFilters,\r\n  IssueItemRequest,\r\n  AcceptanceItem,\r\n  ConfirmAcceptanceRequest\r\n} from '@/api/inventory'\r\nimport type { \r\n  ReceivingItem,\r\n  ReceivingDetail,\r\n  ReceivingFilters,\r\n  ConfirmReceivingRequest\r\n} from '@/api/receiving'\r\nimport type {\r\n  PutAwayItem,\r\n  PutAwayFilters,\r\n  StorageTreeNode,\r\n  AssignStorageRequest,\r\n  QuickStorageRequest\r\n} from '@/api/storage'\r\nimport { handleApiError } from '@/api'\r\n\r\nexport const useInventoryStore = defineStore('inventory', () => {\r\n  // State\r\n  const items = ref<InventoryItem[]>([])\r\n  const receivingItems = ref<ReceivingItem[]>([])\r\n  const putAwayItems = ref<PutAwayItem[]>([])\r\n  const acceptanceItems = ref<AcceptanceItem[]>([])\r\n  const storageTree = ref<StorageTreeNode[]>([])\r\n  const currentItem = ref<InventoryItem | null>(null)\r\n  const currentReceivingDetail = ref<ReceivingDetail | null>(null)\r\n  const loading = ref(false)\r\n\r\n  // Getters\r\n  const itemsByLocation = computed(() => {\r\n    const grouped: Record<string, InventoryItem[]> = {}\r\n    items.value.forEach(item => {\r\n      item.storage_locations.forEach(location => {\r\n        const locationKey = `${location.area_code}-${location.shelf_code}-${location.floor_level}`\r\n        if (!grouped[locationKey]) {\r\n          grouped[locationKey] = []\r\n        }\r\n        if (!grouped[locationKey].find(i => i.item_id === item.item_id)) {\r\n          grouped[locationKey].push(item)\r\n        }\r\n      })\r\n    })\r\n    return grouped\r\n  })\r\n\r\n  const availableStock = computed(() => \r\n    items.value.filter(item => item.available_quantity > 0)\r\n  )\r\n\r\n  const itemById = computed(() => (id: string) => \r\n    items.value.find(item => item.item_id === id)\r\n  )\r\n\r\n  const pendingAcceptanceCount = computed(() => \r\n    acceptanceItems.value.filter(item => item.acceptance_status === 'pending_acceptance').length\r\n  )\r\n\r\n  // Inventory Actions\r\n  const fetchInventory = async (filters: InventoryFilters = {}) => {\r\n    try {\r\n      loading.value = true\r\n      const inventoryData = await inventoryApi.queryInventory(filters)\r\n      items.value = inventoryData\r\n    } catch (error) {\r\n      handleApiError(error, '獲取庫存數據失敗')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const issueItem = async (data: IssueItemRequest) => {\r\n    try {\r\n      loading.value = true\r\n      const movementHistory = await inventoryApi.issueItem(data)\r\n      \r\n      // Refresh inventory to get updated quantities\r\n      await fetchInventory()\r\n      \r\n      ElMessage.success('物品領用成功')\r\n      return movementHistory\r\n    } catch (error) {\r\n      handleApiError(error, '物品領用失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  // Receiving Actions\r\n  const fetchReceivingItems = async (filters: ReceivingFilters = {}) => {\r\n    try {\r\n      loading.value = true\r\n      const items = await receivingApi.getReceivingItems(filters)\r\n      receivingItems.value = items\r\n    } catch (error) {\r\n      handleApiError(error, '獲取收貨項目失敗')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const fetchReceivingDetail = async (poNo: string) => {\r\n    try {\r\n      loading.value = true\r\n      const detail = await receivingApi.getReceivingDetail(poNo)\r\n      currentReceivingDetail.value = detail\r\n      return detail\r\n    } catch (error) {\r\n      handleApiError(error, '獲取收貨詳情失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const confirmReceiving = async (poNo: string, detailId: number, data: ConfirmReceivingRequest = {}) => {\r\n    try {\r\n      loading.value = true\r\n      const updatedItem = await receivingApi.confirmReceiving(poNo, detailId, data)\r\n      \r\n      // Refresh receiving items and detail\r\n      await fetchReceivingItems()\r\n      if (currentReceivingDetail.value?.purchase_order.purchase_order_no === poNo) {\r\n        await fetchReceivingDetail(poNo)\r\n      }\r\n      \r\n      ElMessage.success('收貨確認成功')\r\n      return updatedItem\r\n    } catch (error) {\r\n      handleApiError(error, '確認收貨失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  // Storage Actions\r\n  const fetchPutAwayItems = async (filters: PutAwayFilters = {}) => {\r\n    try {\r\n      loading.value = true\r\n      const items = await storageApi.getPutAwayItems(filters)\r\n      putAwayItems.value = items\r\n    } catch (error) {\r\n      handleApiError(error, '獲取上架項目失敗')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const fetchStorageTree = async () => {\r\n    try {\r\n      loading.value = true\r\n      const tree = await storageApi.getStorageTree()\r\n      storageTree.value = tree\r\n    } catch (error) {\r\n      handleApiError(error, '獲取儲存位置樹失敗')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const assignStorage = async (data: AssignStorageRequest) => {\r\n    try {\r\n      loading.value = true\r\n      const movementHistory = await storageApi.assignStorage(data)\r\n      \r\n      // Refresh put away items\r\n      await fetchPutAwayItems()\r\n      \r\n      ElMessage.success('儲存位置分配成功')\r\n      return movementHistory\r\n    } catch (error) {\r\n      handleApiError(error, '分配儲存位置失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const quickStorageIn = async (data: QuickStorageRequest) => {\r\n    try {\r\n      loading.value = true\r\n      const movementHistory = await storageApi.quickStorageIn(data)\r\n      \r\n      // Refresh inventory\r\n      await fetchInventory()\r\n      \r\n      ElMessage.success('快速入庫成功')\r\n      return movementHistory\r\n    } catch (error) {\r\n      handleApiError(error, '快速入庫失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  // Acceptance Actions\r\n  const fetchAcceptanceItems = async () => {\r\n    try {\r\n      loading.value = true\r\n      const items = await inventoryApi.getMyAcceptanceItems()\r\n      acceptanceItems.value = items\r\n    } catch (error) {\r\n      handleApiError(error, '獲取驗收項目失敗')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const confirmAcceptance = async (detailId: number, data: ConfirmAcceptanceRequest = {}) => {\r\n    try {\r\n      loading.value = true\r\n      const updatedItem = await inventoryApi.confirmAcceptance(detailId, data)\r\n      \r\n      // Refresh acceptance items\r\n      await fetchAcceptanceItems()\r\n      \r\n      ElMessage.success('驗收確認成功')\r\n      return updatedItem\r\n    } catch (error) {\r\n      handleApiError(error, '確認驗收失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const clearCurrentItem = () => {\r\n    currentItem.value = null\r\n  }\r\n\r\n  const clearCurrentReceivingDetail = () => {\r\n    currentReceivingDetail.value = null\r\n  }\r\n\r\n  return {\r\n    // State\r\n    items,\r\n    receivingItems,\r\n    putAwayItems,\r\n    acceptanceItems,\r\n    storageTree,\r\n    currentItem,\r\n    currentReceivingDetail,\r\n    loading,\r\n\r\n    // Getters\r\n    itemsByLocation,\r\n    availableStock,\r\n    itemById,\r\n    pendingAcceptanceCount,\r\n\r\n    // Actions\r\n    fetchInventory,\r\n    issueItem,\r\n    fetchReceivingItems,\r\n    fetchReceivingDetail,\r\n    confirmReceiving,\r\n    fetchPutAwayItems,\r\n    fetchStorageTree,\r\n    assignStorage,\r\n    quickStorageIn,\r\n    fetchAcceptanceItems,\r\n    confirmAcceptance,\r\n    clearCurrentItem,\r\n    clearCurrentReceivingDetail\r\n  }\r\n})","import { defineStore } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { accountingApi } from '@/api'\r\nimport type { \r\n  BillingCandidate,\r\n  BillingCandidatesFilters,\r\n  BillingBatch,\r\n  CreateBillingRequest,\r\n  PaymentHistoryFilters,\r\n  PaymentHistoryItem,\r\n  MarkPaidRequest\r\n} from '@/api/accounting'\r\nimport { handleApiError } from '@/api'\r\n\r\nexport const useAccountingStore = defineStore('accounting', () => {\r\n  // State\r\n  const billingCandidates = ref<BillingCandidate[]>([])\r\n  const billingBatches = ref<BillingBatch[]>([])\r\n  const paymentHistory = ref<PaymentHistoryItem[]>([])\r\n  const loading = ref(false)\r\n  const pagination = ref({\r\n    page: 1,\r\n    page_size: 20,\r\n    total: 0,\r\n    pages: 0\r\n  })\r\n\r\n  // Getters\r\n  const candidatesBySupplier = computed(() => {\r\n    const grouped: Record<string, BillingCandidate[]> = {}\r\n    billingCandidates.value.forEach(candidate => {\r\n      const supplierName = candidate.supplier_name\r\n      if (!grouped[supplierName]) {\r\n        grouped[supplierName] = []\r\n      }\r\n      grouped[supplierName].push(candidate)\r\n    })\r\n    return grouped\r\n  })\r\n\r\n  const totalCandidateAmount = computed(() => \r\n    billingCandidates.value.reduce((sum, candidate) => sum + candidate.grand_total_int, 0)\r\n  )\r\n\r\n  const unpaidBillings = computed(() => \r\n    paymentHistory.value.filter(item => item.billing_status === 'billed')\r\n  )\r\n\r\n  const paidBillings = computed(() => \r\n    paymentHistory.value.filter(item => item.billing_status === 'paid')\r\n  )\r\n\r\n  const totalUnpaidAmount = computed(() => \r\n    unpaidBillings.value.reduce((sum, item) => sum + item.amount, 0)\r\n  )\r\n\r\n  // Actions\r\n  const fetchBillingCandidates = async (filters: BillingCandidatesFilters = {}) => {\r\n    try {\r\n      loading.value = true\r\n      const candidates = await accountingApi.getBillingCandidates(filters)\r\n      billingCandidates.value = candidates\r\n    } catch (error) {\r\n      handleApiError(error, '獲取待開票項目失敗')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const generateBilling = async (data: CreateBillingRequest) => {\r\n    try {\r\n      loading.value = true\r\n      const billing = await accountingApi.generateBilling(data)\r\n      billingBatches.value.unshift(billing)\r\n      \r\n      // Remove processed candidates from list\r\n      billingCandidates.value = billingCandidates.value.filter(\r\n        candidate => !data.po_numbers.includes(candidate.purchase_order_no)\r\n      )\r\n      \r\n      ElMessage.success('開票成功')\r\n      return billing\r\n    } catch (error) {\r\n      handleApiError(error, '生成開票失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const markBillingPaid = async (billingId: string, data: MarkPaidRequest) => {\r\n    try {\r\n      loading.value = true\r\n      const updatedBilling = await accountingApi.markBillingPaid(billingId, data)\r\n      \r\n      // Update in billing batches list\r\n      const batchIndex = billingBatches.value.findIndex(batch => batch.billing_id === billingId)\r\n      if (batchIndex !== -1) {\r\n        billingBatches.value[batchIndex] = updatedBilling\r\n      }\r\n      \r\n      // Refresh payment history to show updated status\r\n      await fetchPaymentHistory()\r\n      \r\n      ElMessage.success('付款標記成功')\r\n      return updatedBilling\r\n    } catch (error) {\r\n      handleApiError(error, '標記付款失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const markPOPaid = async (poNo: string, data: MarkPaidRequest) => {\r\n    try {\r\n      loading.value = true\r\n      const updatedPO = await accountingApi.markPOPaid(poNo, data)\r\n      \r\n      // Refresh payment history to show updated status\r\n      await fetchPaymentHistory()\r\n      \r\n      ElMessage.success('採購單付款標記成功')\r\n      return updatedPO\r\n    } catch (error) {\r\n      handleApiError(error, '標記採購單付款失敗')\r\n      throw error\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const fetchPaymentHistory = async (filters: PaymentHistoryFilters = {}) => {\r\n    try {\r\n      loading.value = true\r\n      const response = await accountingApi.getPaymentHistory(filters)\r\n      paymentHistory.value = response.items\r\n      pagination.value = response.pagination\r\n    } catch (error) {\r\n      handleApiError(error, '獲取付款歷史失敗')\r\n    } finally {\r\n      loading.value = false\r\n    }\r\n  }\r\n\r\n  const getSupplierPaymentSummary = (supplierId: string) => {\r\n    const supplierHistory = paymentHistory.value.filter(item => \r\n      item.supplier_name === supplierId // This would need supplier ID matching\r\n    )\r\n    \r\n    const totalAmount = supplierHistory.reduce((sum, item) => sum + item.amount, 0)\r\n    const unpaidAmount = supplierHistory\r\n      .filter(item => item.billing_status === 'billed')\r\n      .reduce((sum, item) => sum + item.amount, 0)\r\n    const paidAmount = supplierHistory\r\n      .filter(item => item.billing_status === 'paid')\r\n      .reduce((sum, item) => sum + item.amount, 0)\r\n\r\n    return {\r\n      totalAmount,\r\n      unpaidAmount,\r\n      paidAmount,\r\n      itemCount: supplierHistory.length\r\n    }\r\n  }\r\n\r\n  const getMonthlyPaymentSummary = (month: string) => {\r\n    const monthHistory = paymentHistory.value.filter(item => \r\n      item.billing_month === month\r\n    )\r\n    \r\n    const totalAmount = monthHistory.reduce((sum, item) => sum + item.amount, 0)\r\n    const unpaidAmount = monthHistory\r\n      .filter(item => item.billing_status === 'billed')\r\n      .reduce((sum, item) => sum + item.amount, 0)\r\n    const paidAmount = monthHistory\r\n      .filter(item => item.billing_status === 'paid')\r\n      .reduce((sum, item) => sum + item.amount, 0)\r\n\r\n    return {\r\n      totalAmount,\r\n      unpaidAmount,\r\n      paidAmount,\r\n      itemCount: monthHistory.length\r\n    }\r\n  }\r\n\r\n  const clearCandidates = () => {\r\n    billingCandidates.value = []\r\n  }\r\n\r\n  return {\r\n    // State\r\n    billingCandidates,\r\n    billingBatches,\r\n    paymentHistory,\r\n    loading,\r\n    pagination,\r\n\r\n    // Getters\r\n    candidatesBySupplier,\r\n    totalCandidateAmount,\r\n    unpaidBillings,\r\n    paidBillings,\r\n    totalUnpaidAmount,\r\n\r\n    // Actions\r\n    fetchBillingCandidates,\r\n    generateBilling,\r\n    markBillingPaid,\r\n    markPOPaid,\r\n    fetchPaymentHistory,\r\n    getSupplierPaymentSummary,\r\n    getMonthlyPaymentSummary,\r\n    clearCandidates\r\n  }\r\n})","<template>\r\n  <div class=\"dashboard\">\r\n    <PageHeader\r\n      title=\"我的儀表板\"\r\n      :subtitle=\"`歡迎回來，${authStore.user?.chinese_name || authStore.user?.username}`\"\r\n      :show-refresh=\"true\"\r\n      @refresh=\"handleRefresh\"\r\n    >\r\n      <template #extra>\r\n        <el-select\r\n          v-model=\"selectedPeriod\"\r\n          placeholder=\"選擇時間範圍\"\r\n          style=\"width: 120px\"\r\n          @change=\"handlePeriodChange\"\r\n        >\r\n          <el-option label=\"本週\" value=\"week\" />\r\n          <el-option label=\"本月\" value=\"month\" />\r\n          <el-option label=\"本季\" value=\"quarter\" />\r\n        </el-select>\r\n      </template>\r\n    </PageHeader>\r\n\r\n    <!-- My Items Overview -->\r\n    <div class=\"dashboard-stats\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\r\n          <StatCard\r\n            title=\"疑問項目\"\r\n            :value=\"myItems.questioned\"\r\n            icon=\"QuestionFilled\"\r\n            color=\"warning\"\r\n            :loading=\"loading\"\r\n            description=\"需要您回覆\"\r\n          />\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\r\n          <StatCard\r\n            title=\"被拒絕項目\"\r\n            :value=\"myItems.rejected\"\r\n            icon=\"CircleClose\"\r\n            color=\"danger\"\r\n            :loading=\"loading\"\r\n            description=\"需要修改\"\r\n          />\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\r\n          <StatCard\r\n            title=\"未到貨項目\"\r\n            :value=\"myItems.notArrived\"\r\n            icon=\"Van\"\r\n            color=\"info\"\r\n            :loading=\"loading\"\r\n            description=\"運送中\"\r\n          />\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\r\n          <StatCard\r\n            title=\"已到貨項目\"\r\n            :value=\"myItems.arrived\"\r\n            icon=\"CircleCheck\"\r\n            color=\"success\"\r\n            :loading=\"loading\"\r\n            description=\"待領取\"\r\n          />\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <!-- My Items Lists and Quick Actions -->\r\n    <div class=\"dashboard-content\">\r\n      <el-row :gutter=\"20\">\r\n        <!-- Left side - My Items Lists -->\r\n        <el-col :xs=\"24\" :lg=\"16\">\r\n          <div class=\"dashboard-charts\">\r\n            <!-- Questioned Items -->\r\n            <el-card class=\"items-card\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span><el-icon><QuestionFilled /></el-icon> 疑問項目列表</span>\r\n                  <el-button link type=\"primary\" @click=\"viewAllQuestioned\">查看全部</el-button>\r\n                </div>\r\n              </template>\r\n              <div class=\"items-list\">\r\n                <div v-if=\"questionedItems.length === 0\" class=\"empty-state\">\r\n                  <el-empty description=\"暫無疑問項目\" :image-size=\"60\" />\r\n                </div>\r\n                <div v-else>\r\n                  <div v-for=\"item in questionedItems.slice(0, 5)\" :key=\"item.id\" class=\"item-row\">\r\n                    <div class=\"item-info\">\r\n                      <div class=\"item-title\">{{ item.item_name }}</div>\r\n                      <div class=\"item-meta\">\r\n                        <span>請購單: {{ item.request_order_no }}</span>\r\n                        <span class=\"separator\">|</span>\r\n                        <span>{{ item.submit_date }}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"item-action\">\r\n                      <el-button size=\"small\" type=\"warning\" @click=\"handleReply(item)\">回覆</el-button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-card>\r\n\r\n            <!-- Rejected Items -->\r\n            <el-card class=\"items-card\" style=\"margin-top: 20px;\">\r\n              <template #header>\r\n                <div class=\"card-header\">\r\n                  <span><el-icon><CircleClose /></el-icon> 被拒絕項目列表</span>\r\n                  <el-button link type=\"primary\" @click=\"viewAllRejected\">查看全部</el-button>\r\n                </div>\r\n              </template>\r\n              <div class=\"items-list\">\r\n                <div v-if=\"rejectedItems.length === 0\" class=\"empty-state\">\r\n                  <el-empty description=\"暫無被拒絕項目\" :image-size=\"60\" />\r\n                </div>\r\n                <div v-else>\r\n                  <div v-for=\"item in rejectedItems.slice(0, 5)\" :key=\"item.id\" class=\"item-row\">\r\n                    <div class=\"item-info\">\r\n                      <div class=\"item-title\">{{ item.item_name }}</div>\r\n                      <div class=\"item-meta\">\r\n                        <span>拒絕原因: {{ item.status_note }}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"item-action\">\r\n                      <el-button size=\"small\" type=\"danger\" @click=\"handleEdit(item)\">修改</el-button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-card>\r\n\r\n            <!-- Status Distribution -->\r\n            <el-card class=\"chart-card\" header=\"請購單狀態分布\" style=\"margin-top: 20px;\">\r\n              <div class=\"status-stats\">\r\n                <div\r\n                  v-for=\"item in statusDistribution\"\r\n                  :key=\"item.status\"\r\n                  class=\"status-item\"\r\n                >\r\n                  <div class=\"status-info\">\r\n                    <StatusTag :status=\"item.status\" size=\"small\" />\r\n                    <span class=\"status-name\">{{ item.name }}</span>\r\n                  </div>\r\n                  <div class=\"status-count\">{{ item.count }}</div>\r\n                </div>\r\n              </div>\r\n            </el-card>\r\n          </div>\r\n        </el-col>\r\n\r\n        <!-- Right side - Quick Actions & Recent Activities -->\r\n        <el-col :xs=\"24\" :lg=\"8\">\r\n          <div class=\"dashboard-sidebar\">\r\n            <!-- Quick Actions -->\r\n            <el-card header=\"快速操作\">\r\n              <div class=\"quick-actions\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  :icon=\"Plus\"\r\n                  @click=\"createRequisition\"\r\n                >\r\n                  新增請購單\r\n                </el-button>\r\n                <el-button\r\n                  type=\"success\"\r\n                  :icon=\"ShoppingCart\"\r\n                  @click=\"buildPO\"\r\n                >\r\n                  建立採購單\r\n                </el-button>\r\n                <el-button\r\n                  type=\"info\"\r\n                  :icon=\"Search\"\r\n                  @click=\"queryInventory\"\r\n                >\r\n                  庫存查詢\r\n                </el-button>\r\n                <el-button\r\n                  type=\"warning\"\r\n                  :icon=\"Van\"\r\n                  @click=\"manageReceiving\"\r\n                >\r\n                  收貨管理\r\n                </el-button>\r\n              </div>\r\n            </el-card>\r\n\r\n            <!-- Recent Activities -->\r\n            <el-card header=\"最近活動\" style=\"margin-top: 20px;\">\r\n              <el-timeline>\r\n                <el-timeline-item\r\n                  v-for=\"activity in recentActivities\"\r\n                  :key=\"activity.id\"\r\n                  :timestamp=\"activity.timestamp\"\r\n                  size=\"small\"\r\n                >\r\n                  <div class=\"activity-content\">\r\n                    <div class=\"activity-title\">{{ activity.title }}</div>\r\n                    <div class=\"activity-description\">{{ activity.description }}</div>\r\n                  </div>\r\n                </el-timeline-item>\r\n              </el-timeline>\r\n              \r\n              <div v-if=\"recentActivities.length === 0\" class=\"no-activities\">\r\n                <el-empty description=\"暫無活動記錄\" :image-size=\"60\" />\r\n              </div>\r\n            </el-card>\r\n\r\n            <!-- Notifications -->\r\n            <el-card header=\"系統通知\" style=\"margin-top: 20px;\">\r\n              <div class=\"notifications\">\r\n                <div\r\n                  v-for=\"notification in notifications\"\r\n                  :key=\"notification.id\"\r\n                  class=\"notification-item\"\r\n                  :class=\"`notification-${notification.type}`\"\r\n                >\r\n                  <el-icon>\r\n                    <Warning v-if=\"notification.type === 'warning'\" />\r\n                    <InfoFilled v-else-if=\"notification.type === 'info'\" />\r\n                    <CircleCheckFilled v-else-if=\"notification.type === 'success'\" />\r\n                    <CircleCloseFilled v-else />\r\n                  </el-icon>\r\n                  <div class=\"notification-content\">\r\n                    <div class=\"notification-title\">{{ notification.title }}</div>\r\n                    <div class=\"notification-time\">{{ notification.time }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div v-if=\"notifications.length === 0\" class=\"no-notifications\">\r\n                暫無系統通知\r\n              </div>\r\n            </el-card>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, reactive, onMounted, onUnmounted, computed } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport {\r\n  Plus,\r\n  ShoppingCart,\r\n  Search,\r\n  Warning,\r\n  InfoFilled,\r\n  CircleCheckFilled,\r\n  CircleCloseFilled,\r\n  Van,\r\n  QuestionFilled,\r\n  CircleClose,\r\n  CircleCheck\r\n} from '@element-plus/icons-vue'\r\nimport * as echarts from 'echarts'\r\nimport { PageHeader, StatCard, StatusTag } from '@/components'\r\nimport { useRequisitionStore, useInventoryStore, useProcurementStore, useAccountingStore, useAuthStore } from '@/stores'\r\nimport api from '@/api'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst router = useRouter()\r\nconst requisitionStore = useRequisitionStore()\r\nconst inventoryStore = useInventoryStore()\r\nconst procurementStore = useProcurementStore()\r\nconst accountingStore = useAccountingStore()\r\nconst authStore = useAuthStore()\r\n\r\n// Reactive data\r\nconst loading = ref(false)\r\nconst selectedPeriod = ref('month')\r\n\r\n// My Items Statistics\r\nconst myItems = reactive({\r\n  questioned: 0,\r\n  rejected: 0,\r\n  notArrived: 0,\r\n  arrived: 0\r\n})\r\n\r\n// Item Lists\r\nconst questionedItems = ref([])\r\nconst rejectedItems = ref([])\r\nconst notArrivedItems = ref([])\r\nconst arrivedItems = ref([])\r\n\r\n// Trends\r\nconst trends = reactive({\r\n  requisitions: { value: 5.2, isUp: true },\r\n  purchase: { value: -2.1, isUp: false },\r\n  receiving: { value: 8.7, isUp: true },\r\n  inventory: { value: 3.4, isUp: true }\r\n})\r\n\r\n// Status distribution\r\nconst statusDistribution = ref([\r\n  { status: 'draft', name: '草稿', count: 8 },\r\n  { status: 'submitted', name: '已提交', count: 15 },\r\n  { status: 'reviewed', name: '已審核', count: 23 },\r\n  { status: 'approved', name: '已核准', count: 45 }\r\n])\r\n\r\n// Recent activities\r\nconst recentActivities = ref([\r\n  {\r\n    id: 1,\r\n    title: '新請購單已提交',\r\n    description: '用戶張三提交了請購單 REQ-2024-001',\r\n    timestamp: '2小時前'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '採購單已確認',\r\n    description: '採購單 PO-2024-005 已確認採購',\r\n    timestamp: '4小時前'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: '物品已到貨',\r\n    description: '供應商A的貨品已到貨，待收貨確認',\r\n    timestamp: '6小時前'\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '庫存預警',\r\n    description: '辦公用品類庫存不足，請及時補充',\r\n    timestamp: '1天前'\r\n  }\r\n])\r\n\r\n// Notifications\r\nconst notifications = ref([\r\n  {\r\n    id: 1,\r\n    type: 'warning',\r\n    title: '3張請購單待審核',\r\n    time: '10分鐘前'\r\n  },\r\n  {\r\n    id: 2,\r\n    type: 'info',\r\n    title: '系統將於今晚維護',\r\n    time: '2小時前'\r\n  }\r\n])\r\n\r\n// Chart instance\r\nlet chartInstance: echarts.ECharts | null = null\r\n\r\n// Methods\r\nconst handleRefresh = async () => {\r\n  await fetchDashboardData()\r\n}\r\n\r\nconst handlePeriodChange = () => {\r\n  fetchDashboardData()\r\n}\r\n\r\nconst fetchDashboardData = async () => {\r\n  loading.value = true\r\n  try {\r\n    await Promise.all([\r\n      fetchMyItems(),\r\n      fetchStatusDistribution(),\r\n      fetchRecentActivities(),\r\n      fetchNotifications()\r\n    ])\r\n  } catch (error) {\r\n    console.error('Failed to fetch dashboard data:', error)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst fetchMyItems = async () => {\r\n  try {\r\n    const userId = authStore.user?.id\r\n    if (!userId) return\r\n\r\n    // 獲取我的請購單項目\r\n    const response = await api.get('/api/v1/requisitions/my-items', {\r\n      params: {\r\n        user_id: userId,\r\n        period: selectedPeriod.value\r\n      }\r\n    })\r\n\r\n    if (response.data.success) {\r\n      const items = response.data.data || []\r\n\r\n      // 分類項目\r\n      questionedItems.value = items.filter(item => item.item_status === 'questioned')\r\n      rejectedItems.value = items.filter(item => item.item_status === 'rejected')\r\n\r\n      // 統計數量\r\n      myItems.questioned = questionedItems.value.length\r\n      myItems.rejected = rejectedItems.value.length\r\n    }\r\n\r\n    // 獲取採購單項目狀態\r\n    const poResponse = await api.get('/api/v1/purchase-orders/my-items', {\r\n      params: {\r\n        user_id: userId,\r\n        period: selectedPeriod.value\r\n      }\r\n    })\r\n\r\n    if (poResponse.data.success) {\r\n      const poItems = poResponse.data.data || []\r\n\r\n      // 分類採購項目\r\n      notArrivedItems.value = poItems.filter(item =>\r\n        item.shipping_status !== 'arrived' && item.shipping_status !== 'completed'\r\n      )\r\n      arrivedItems.value = poItems.filter(item =>\r\n        item.shipping_status === 'arrived' && item.acceptance_status !== 'accepted'\r\n      )\r\n\r\n      // 統計數量\r\n      myItems.notArrived = notArrivedItems.value.length\r\n      myItems.arrived = arrivedItems.value.length\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to fetch my items:', error)\r\n    // 使用模擬數據\r\n    myItems.questioned = 3\r\n    myItems.rejected = 2\r\n    myItems.notArrived = 5\r\n    myItems.arrived = 4\r\n\r\n    // 模擬項目列表\r\n    questionedItems.value = [\r\n      { id: 1, item_name: '筆記型電腦', request_order_no: 'REQ-2024-001', submit_date: '2024-01-15', status_note: '規格需要確認' },\r\n      { id: 2, item_name: '辦公椅', request_order_no: 'REQ-2024-002', submit_date: '2024-01-16', status_note: '數量是否正確？' },\r\n      { id: 3, item_name: '投影機', request_order_no: 'REQ-2024-003', submit_date: '2024-01-17', status_note: '品牌偏好？' }\r\n    ]\r\n\r\n    rejectedItems.value = [\r\n      { id: 4, item_name: '印表機', request_order_no: 'REQ-2024-004', submit_date: '2024-01-14', status_note: '預算超支' },\r\n      { id: 5, item_name: '會議桌', request_order_no: 'REQ-2024-005', submit_date: '2024-01-13', status_note: '規格不符' }\r\n    ]\r\n  }\r\n}\r\n\r\nconst fetchStatusDistribution = async () => {\r\n  try {\r\n    const userId = authStore.user?.id\r\n    if (!userId) return\r\n\r\n    const response = await api.get('/api/v1/requisitions/status-distribution', {\r\n      params: {\r\n        user_id: userId,\r\n        period: selectedPeriod.value\r\n      }\r\n    })\r\n\r\n    if (response.data.success) {\r\n      statusDistribution.value = response.data.data || []\r\n    }\r\n  } catch (error) {\r\n    // 使用預設數據\r\n    statusDistribution.value = [\r\n      { status: 'draft', name: '草稿', count: 2 },\r\n      { status: 'submitted', name: '已提交', count: 5 },\r\n      { status: 'reviewed', name: '已審核', count: 8 },\r\n      { status: 'approved', name: '已核准', count: 12 }\r\n    ]\r\n  }\r\n}\r\n\r\nconst fetchRecentActivities = async () => {\r\n  try {\r\n    const userId = authStore.user?.id\r\n    if (!userId) return\r\n\r\n    const response = await api.get('/api/v1/activities/recent', {\r\n      params: {\r\n        user_id: userId,\r\n        limit: 5\r\n      }\r\n    })\r\n\r\n    if (response.data.success) {\r\n      recentActivities.value = response.data.data || []\r\n    }\r\n  } catch (error) {\r\n    // 使用預設數據\r\n    recentActivities.value = [\r\n      { id: 1, title: '請購單已提交', description: '您的請購單 REQ-2024-001 已提交', timestamp: '2小時前' },\r\n      { id: 2, title: '項目已審核', description: '您的筆記型電腦申請已通過審核', timestamp: '5小時前' },\r\n      { id: 3, title: '貨品已到貨', description: '您申請的辦公用品已到貨', timestamp: '1天前' }\r\n    ]\r\n  }\r\n}\r\n\r\nconst fetchNotifications = async () => {\r\n  // 保持原有實現\r\n}\r\n\r\n// Item actions\r\nconst handleReply = (item: any) => {\r\n  router.push(`/requisitions/reply/${item.request_order_no}/${item.id}`)\r\n}\r\n\r\nconst handleEdit = (item: any) => {\r\n  router.push(`/requisitions/edit/${item.request_order_no}`)\r\n}\r\n\r\nconst viewAllQuestioned = () => {\r\n  router.push('/requisitions?status=questioned')\r\n}\r\n\r\nconst viewAllRejected = () => {\r\n  router.push('/requisitions?status=rejected')\r\n}\r\n\r\nconst formatMoney = (value: string | number) => {\r\n  const num = typeof value === 'string' ? parseInt(value) : value\r\n  return new Intl.NumberFormat('zh-TW').format(num)\r\n}\r\n\r\n// Quick actions\r\nconst createRequisition = () => {\r\n  router.push('/requisitions/create')\r\n}\r\n\r\nconst buildPO = () => {\r\n  router.push('/purchase-orders/build-candidates')\r\n}\r\n\r\nconst queryInventory = () => {\r\n  router.push('/inventory')\r\n}\r\n\r\nconst manageReceiving = () => {\r\n  router.push('/receiving')\r\n}\r\n\r\n// Lifecycle\r\nonMounted(async () => {\r\n  await fetchDashboardData()\r\n\r\n  // Auto refresh every 3 minutes for personalized data\r\n  const refreshInterval = setInterval(fetchDashboardData, 3 * 60 * 1000)\r\n\r\n  onUnmounted(() => {\r\n    clearInterval(refreshInterval)\r\n  })\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard {\r\n  padding: 0;\r\n}\r\n\r\n.dashboard-stats {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dashboard-content {\r\n  min-height: 500px;\r\n}\r\n\r\n.dashboard-charts {\r\n  .items-card {\r\n    margin-bottom: 20px;\r\n\r\n    .card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      span {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    .items-list {\r\n      .empty-state {\r\n        padding: 20px;\r\n        text-align: center;\r\n      }\r\n\r\n      .item-row {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 12px 0;\r\n        border-bottom: 1px solid #f0f2f5;\r\n\r\n        &:last-child {\r\n          border-bottom: none;\r\n        }\r\n\r\n        .item-info {\r\n          flex: 1;\r\n\r\n          .item-title {\r\n            font-size: 14px;\r\n            font-weight: 500;\r\n            color: #303133;\r\n            margin-bottom: 4px;\r\n          }\r\n\r\n          .item-meta {\r\n            font-size: 12px;\r\n            color: #909399;\r\n\r\n            .separator {\r\n              margin: 0 8px;\r\n              color: #dcdfe6;\r\n            }\r\n          }\r\n        }\r\n\r\n        .item-action {\r\n          flex-shrink: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .chart-card {\r\n    .chart-container {\r\n      height: 300px;\r\n    }\r\n  }\r\n}\r\n\r\n.status-stats {\r\n  .status-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 12px 0;\r\n    border-bottom: 1px solid #f0f2f5;\r\n    \r\n    &:last-child {\r\n      border-bottom: none;\r\n    }\r\n    \r\n    .status-info {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      \r\n      .status-name {\r\n        font-size: 14px;\r\n        color: #606266;\r\n      }\r\n    }\r\n    \r\n    .status-count {\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n      color: #303133;\r\n    }\r\n  }\r\n}\r\n\r\n.dashboard-sidebar {\r\n  .quick-actions {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n    \r\n    .el-button {\r\n      justify-content: flex-start;\r\n    }\r\n  }\r\n}\r\n\r\n.activity-content {\r\n  .activity-title {\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    color: #303133;\r\n    margin-bottom: 4px;\r\n  }\r\n  \r\n  .activity-description {\r\n    font-size: 12px;\r\n    color: #909399;\r\n  }\r\n}\r\n\r\n.no-activities {\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n\r\n.notifications {\r\n  .notification-item {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 12px;\r\n    padding: 12px 0;\r\n    border-bottom: 1px solid #f0f2f5;\r\n    \r\n    &:last-child {\r\n      border-bottom: none;\r\n    }\r\n    \r\n    .el-icon {\r\n      margin-top: 2px;\r\n    }\r\n    \r\n    &.notification-warning .el-icon {\r\n      color: #e6a23c;\r\n    }\r\n    \r\n    &.notification-info .el-icon {\r\n      color: #409eff;\r\n    }\r\n    \r\n    &.notification-success .el-icon {\r\n      color: #67c23a;\r\n    }\r\n    \r\n    &.notification-error .el-icon {\r\n      color: #f56c6c;\r\n    }\r\n  }\r\n  \r\n  .notification-content {\r\n    flex: 1;\r\n    \r\n    .notification-title {\r\n      font-size: 14px;\r\n      color: #303133;\r\n      margin-bottom: 4px;\r\n    }\r\n    \r\n    .notification-time {\r\n      font-size: 12px;\r\n      color: #909399;\r\n    }\r\n  }\r\n}\r\n\r\n.no-notifications {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #909399;\r\n  font-size: 14px;\r\n}\r\n\r\n/* Responsive */\r\n@media (max-width: 768px) {\r\n  .dashboard-stats {\r\n    .el-col {\r\n      margin-bottom: 16px;\r\n    }\r\n  }\r\n  \r\n  .dashboard-sidebar {\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style>"],"names":["useProcurementStore","defineStore","purchaseOrders","ref","buildCandidates","currentPO","loading","pagination","filters","poBySupplier","computed","grouped","po","supplierId","activePOs","poById","poNo","fetchBuildCandidates","candidates","procurementApi","error","handleApiError","data","ElMessage","newFilters","response","updatedPO","index","_a","confirmedPO","withdrawnPO","reorganizedPO","useInventoryStore","items","receivingItems","putAwayItems","acceptanceItems","storageTree","currentItem","currentReceivingDetail","itemsByLocation","item","location","locationKey","i","availableStock","itemById","id","pendingAcceptanceCount","fetchInventory","inventoryData","inventoryApi","issueItem","movementHistory","fetchReceivingItems","receivingApi","fetchReceivingDetail","detail","confirmReceiving","detailId","updatedItem","fetchPutAwayItems","storageApi","fetchStorageTree","tree","assignStorage","quickStorageIn","fetchAcceptanceItems","useAccountingStore","billingCandidates","billingBatches","paymentHistory","candidatesBySupplier","candidate","supplierName","totalCandidateAmount","sum","unpaidBillings","paidBillings","totalUnpaidAmount","fetchBillingCandidates","accountingApi","generateBilling","billing","markBillingPaid","billingId","updatedBilling","batchIndex","batch","fetchPaymentHistory","markPOPaid","supplierHistory","totalAmount","unpaidAmount","paidAmount","month","monthHistory","router","useRouter","useRequisitionStore","authStore","useAuthStore","selectedPeriod","myItems","reactive","questionedItems","rejectedItems","notArrivedItems","arrivedItems","statusDistribution","recentActivities","notifications","handleRefresh","fetchDashboardData","handlePeriodChange","fetchMyItems","fetchStatusDistribution","fetchRecentActivities","fetchNotifications","userId","api","poResponse","poItems","handleReply","handleEdit","viewAllQuestioned","viewAllRejected","createRequisition","buildPO","queryInventory","manageReceiving","onMounted","refreshInterval","onUnmounted","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_unref","PageHeader","_component_el_select","_cache","$event","_component_el_option","_component_el_row","_withCtx","_component_el_col","StatCard","_createElementVNode","_hoisted_4","_component_el_card","_hoisted_5","_component_el_icon","QuestionFilled","_createTextVNode","_hoisted_6","_hoisted_7","_component_el_empty","_Fragment","_renderList","_hoisted_10","_toDisplayString","_hoisted_11","_component_el_button","_hoisted_13","CircleClose","_hoisted_14","_hoisted_15","_hoisted_18","_hoisted_19","_hoisted_21","StatusTag","_hoisted_25","_hoisted_26","Plus","ShoppingCart","Search","Van","_component_el_timeline","activity","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_31","notification","_normalizeClass","_createBlock","Warning","InfoFilled","CircleCheckFilled","CircleCloseFilled","_hoisted_33","_hoisted_34"],"mappings":"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"}