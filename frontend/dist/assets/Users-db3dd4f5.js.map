{"version":3,"file":"Users-db3dd4f5.js","sources":["../../src/views/system/Users.vue"],"sourcesContent":["<template>\r\n  <div class=\"users-management\">\r\n    <!-- Header with actions -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-left\">\r\n        <h1 class=\"page-title\">用戶管理</h1>\r\n        <div class=\"stats-cards\" v-if=\"statistics\">\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-number\">{{ statistics.total_users }}</div>\r\n            <div class=\"stat-label\">總用戶數</div>\r\n          </div>\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-number\">{{ statistics.active_users }}</div>\r\n            <div class=\"stat-label\">活躍用戶</div>\r\n          </div>\r\n          <div class=\"stat-card\">\r\n            <div class=\"stat-number\">{{ statistics.inactive_users }}</div>\r\n            <div class=\"stat-label\">停用用戶</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <button class=\"btn btn-primary\" @click=\"showCreateModal\">\r\n          <i class=\"icon-plus\"></i>\r\n          新增用戶\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Search and Filters -->\r\n    <div class=\"search-panel\">\r\n      <div class=\"search-row\">\r\n        <div class=\"search-field\">\r\n          <input\r\n            v-model=\"searchQuery\"\r\n            type=\"text\"\r\n            placeholder=\"搜尋用戶名稱、姓名、部門...\"\r\n            class=\"search-input\"\r\n            @keyup.enter=\"handleSearch\"\r\n          />\r\n          <button class=\"search-btn\" @click=\"handleSearch\">\r\n            <i class=\"icon-search\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"filter-group\">\r\n          <select v-model=\"filters.role\" class=\"filter-select\" @change=\"handleSearch\">\r\n            <option value=\"\">全部角色</option>\r\n            <option v-for=\"role in roles\" :key=\"role.value\" :value=\"role.value\">\r\n              {{ role.label }}\r\n            </option>\r\n          </select>\r\n\r\n          <select v-model=\"filters.is_active\" class=\"filter-select\" @change=\"handleSearch\">\r\n            <option value=\"\">全部狀態</option>\r\n            <option value=\"true\">活躍</option>\r\n            <option value=\"false\">停用</option>\r\n          </select>\r\n\r\n          <input\r\n            v-model=\"filters.department\"\r\n            type=\"text\"\r\n            placeholder=\"部門\"\r\n            class=\"filter-input\"\r\n            @keyup.enter=\"handleSearch\"\r\n          />\r\n\r\n          <button class=\"btn btn-outline\" @click=\"clearFilters\">清除篩選</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Users Table -->\r\n    <div class=\"data-table-container\">\r\n      <table class=\"data-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>用戶ID</th>\r\n            <th>中文姓名</th>\r\n            <th>用戶名稱</th>\r\n            <th>部門</th>\r\n            <th>職稱</th>\r\n            <th>角色</th>\r\n            <th>狀態</th>\r\n            <th>創建時間</th>\r\n            <th>操作</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"user in users\" :key=\"user.user_id\" class=\"table-row\">\r\n            <td>{{ user.user_id }}</td>\r\n            <td>{{ user.chinese_name }}</td>\r\n            <td>{{ user.username }}</td>\r\n            <td>{{ user.department || '-' }}</td>\r\n            <td>{{ user.job_title || '-' }}</td>\r\n            <td>\r\n              <span class=\"role-badge\" :class=\"`role-${user.role.toLowerCase()}`\">\r\n                {{ getRoleLabel(user.role) }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span class=\"status-badge\" :class=\"user.is_active ? 'status-active' : 'status-inactive'\">\r\n                {{ user.is_active ? '活躍' : '停用' }}\r\n              </span>\r\n            </td>\r\n            <td>{{ formatDate(user.created_at) }}</td>\r\n            <td>\r\n              <div class=\"action-buttons\">\r\n                <button class=\"btn-icon\" @click=\"editUser(user)\" title=\"編輯\">\r\n                  <i class=\"icon-edit\"></i>\r\n                </button>\r\n                <button class=\"btn-icon\" @click=\"showResetPasswordModal(user)\" title=\"重置密碼\">\r\n                  <i class=\"icon-key\"></i>\r\n                </button>\r\n                <button\r\n                  v-if=\"user.is_active\"\r\n                  class=\"btn-icon btn-danger\"\r\n                  @click=\"deactivateUser(user)\"\r\n                  title=\"停用\"\r\n                  :disabled=\"user.user_id === currentUser?.user_id\"\r\n                >\r\n                  <i class=\"icon-ban\"></i>\r\n                </button>\r\n                <button\r\n                  v-else\r\n                  class=\"btn-icon btn-success\"\r\n                  @click=\"activateUser(user)\"\r\n                  title=\"啟用\"\r\n                >\r\n                  <i class=\"icon-check\"></i>\r\n                </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div v-if=\"loading\" class=\"loading-spinner\">載入中...</div>\r\n      <div v-if=\"!loading && users.length === 0\" class=\"no-data\">沒有找到用戶</div>\r\n    </div>\r\n\r\n    <!-- Pagination -->\r\n    <div v-if=\"pagination.pages > 1\" class=\"pagination\">\r\n      <button\r\n        class=\"pagination-btn\"\r\n        :disabled=\"pagination.page <= 1\"\r\n        @click=\"changePage(pagination.page - 1)\"\r\n      >\r\n        上一頁\r\n      </button>\r\n\r\n      <span class=\"pagination-info\">\r\n        第 {{ pagination.page }} 頁，共 {{ pagination.pages }} 頁\r\n        (總計 {{ pagination.total }} 筆)\r\n      </span>\r\n\r\n      <button\r\n        class=\"pagination-btn\"\r\n        :disabled=\"pagination.page >= pagination.pages\"\r\n        @click=\"changePage(pagination.page + 1)\"\r\n      >\r\n        下一頁\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Create/Edit User Modal -->\r\n    <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <div class=\"modal-header\">\r\n          <h3>{{ editingUser ? '編輯用戶' : '新增用戶' }}</h3>\r\n          <button class=\"close-btn\" @click=\"closeModal\">&times;</button>\r\n        </div>\r\n\r\n        <form @submit.prevent=\"saveUser\" class=\"user-form\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-field\">\r\n              <label>用戶名稱 *</label>\r\n              <input\r\n                v-model=\"userForm.username\"\r\n                type=\"text\"\r\n                required\r\n                :disabled=\"!!editingUser\"\r\n                class=\"form-input\"\r\n              />\r\n            </div>\r\n            <div class=\"form-field\">\r\n              <label>中文姓名 *</label>\r\n              <input\r\n                v-model=\"userForm.chinese_name\"\r\n                type=\"text\"\r\n                required\r\n                class=\"form-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <div class=\"form-field\">\r\n              <label>部門</label>\r\n              <input\r\n                v-model=\"userForm.department\"\r\n                type=\"text\"\r\n                class=\"form-input\"\r\n              />\r\n            </div>\r\n            <div class=\"form-field\">\r\n              <label>職稱</label>\r\n              <input\r\n                v-model=\"userForm.job_title\"\r\n                type=\"text\"\r\n                class=\"form-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <div class=\"form-field\">\r\n              <label>角色 *</label>\r\n              <select v-model=\"userForm.role\" required class=\"form-select\">\r\n                <option value=\"\">請選擇角色</option>\r\n                <option v-for=\"role in roles\" :key=\"role.value\" :value=\"role.value\">\r\n                  {{ role.label }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-field\">\r\n              <label>\r\n                <input\r\n                  v-model=\"userForm.is_active\"\r\n                  type=\"checkbox\"\r\n                  class=\"form-checkbox\"\r\n                />\r\n                啟用帳號\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"!editingUser\" class=\"form-row\">\r\n            <div class=\"form-field\">\r\n              <label>密碼 *</label>\r\n              <input\r\n                v-model=\"userForm.password\"\r\n                type=\"password\"\r\n                required\r\n                class=\"form-input\"\r\n                placeholder=\"至少8字符，包含大小寫字母、數字和特殊字符\"\r\n              />\r\n            </div>\r\n            <div class=\"form-field\">\r\n              <label>確認密碼 *</label>\r\n              <input\r\n                v-model=\"confirmPassword\"\r\n                type=\"password\"\r\n                required\r\n                class=\"form-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-actions\">\r\n            <button type=\"button\" class=\"btn btn-outline\" @click=\"closeModal\">取消</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"saving\">\r\n              {{ saving ? '儲存中...' : '儲存' }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Reset Password Modal -->\r\n    <div v-if=\"showPasswordModal\" class=\"modal-overlay\" @click=\"closePasswordModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <div class=\"modal-header\">\r\n          <h3>重置密碼 - {{ passwordUser?.chinese_name }}</h3>\r\n          <button class=\"close-btn\" @click=\"closePasswordModal\">&times;</button>\r\n        </div>\r\n\r\n        <form @submit.prevent=\"resetPassword\" class=\"password-form\">\r\n          <div class=\"form-field\">\r\n            <label>新密碼 *</label>\r\n            <input\r\n              v-model=\"newPassword\"\r\n              type=\"password\"\r\n              required\r\n              class=\"form-input\"\r\n              placeholder=\"至少8字符，包含大小寫字母、數字和特殊字符\"\r\n            />\r\n          </div>\r\n          <div class=\"form-field\">\r\n            <label>確認新密碼 *</label>\r\n            <input\r\n              v-model=\"confirmNewPassword\"\r\n              type=\"password\"\r\n              required\r\n              class=\"form-input\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-actions\">\r\n            <button type=\"button\" class=\"btn btn-outline\" @click=\"closePasswordModal\">取消</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"resetting\">\r\n              {{ resetting ? '重置中...' : '重置密碼' }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Confirm Dialog -->\r\n    <div v-if=\"showConfirmDialog\" class=\"modal-overlay\" @click=\"cancelConfirm\">\r\n      <div class=\"modal-content confirm-dialog\" @click.stop>\r\n        <div class=\"modal-header\">\r\n          <h3>確認操作</h3>\r\n        </div>\r\n        <div class=\"confirm-content\">\r\n          <p>{{ confirmMessage }}</p>\r\n        </div>\r\n        <div class=\"form-actions\">\r\n          <button class=\"btn btn-outline\" @click=\"cancelConfirm\">取消</button>\r\n          <button class=\"btn btn-danger\" @click=\"confirmAction\">確認</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, reactive, onMounted, computed } from 'vue'\r\nimport { usersApi, type UserSearchFilters, type CreateUserRequest, type UpdateUserRequest } from '@/api/users'\r\nimport type { User, UserRoleType } from '@/types/auth'\r\nimport { useAuthStore } from '@/stores/auth'\r\n\r\n// Store\r\nconst authStore = useAuthStore()\r\nconst currentUser = computed(() => authStore.currentUser)\r\n\r\n// Data\r\nconst users = ref<User[]>([])\r\nconst roles = ref<Array<{value: UserRoleType, label: string}>>([])\r\nconst statistics = ref<any>(null)\r\nconst loading = ref(false)\r\nconst saving = ref(false)\r\nconst resetting = ref(false)\r\n\r\n// Search and filters\r\nconst searchQuery = ref('')\r\nconst filters = reactive<UserSearchFilters>({\r\n  q: '',\r\n  role: undefined,\r\n  department: '',\r\n  is_active: undefined,\r\n  page: 1,\r\n  page_size: 20\r\n})\r\n\r\n// Pagination\r\nconst pagination = reactive({\r\n  page: 1,\r\n  page_size: 20,\r\n  total: 0,\r\n  pages: 0\r\n})\r\n\r\n// Modals\r\nconst showModal = ref(false)\r\nconst showPasswordModal = ref(false)\r\nconst showConfirmDialog = ref(false)\r\nconst editingUser = ref<User | null>(null)\r\nconst passwordUser = ref<User | null>(null)\r\n\r\n// Forms\r\nconst userForm = reactive<CreateUserRequest & UpdateUserRequest>({\r\n  username: '',\r\n  chinese_name: '',\r\n  password: '',\r\n  department: '',\r\n  job_title: '',\r\n  role: 'Everyone' as UserRoleType,\r\n  is_active: true\r\n})\r\n\r\nconst confirmPassword = ref('')\r\nconst newPassword = ref('')\r\nconst confirmNewPassword = ref('')\r\n\r\n// Confirm dialog\r\nconst confirmMessage = ref('')\r\nconst confirmCallback = ref<(() => void) | null>(null)\r\n\r\n// Methods\r\nconst loadUsers = async () => {\r\n  loading.value = true\r\n  try {\r\n    const response = await usersApi.searchUsers(filters)\r\n    users.value = response.items\r\n    pagination.page = response.pagination.page\r\n    pagination.page_size = response.pagination.page_size\r\n    pagination.total = response.pagination.total\r\n    pagination.pages = response.pagination.pages\r\n  } catch (error) {\r\n    console.error('Failed to load users:', error)\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst loadRoles = async () => {\r\n  try {\r\n    roles.value = await usersApi.getRoles()\r\n  } catch (error) {\r\n    console.error('Failed to load roles:', error)\r\n  }\r\n}\r\n\r\nconst loadStatistics = async () => {\r\n  try {\r\n    statistics.value = await usersApi.getUserStatistics()\r\n  } catch (error) {\r\n    console.error('Failed to load statistics:', error)\r\n  }\r\n}\r\n\r\nconst handleSearch = () => {\r\n  filters.q = searchQuery.value\r\n  filters.page = 1\r\n  loadUsers()\r\n}\r\n\r\nconst clearFilters = () => {\r\n  searchQuery.value = ''\r\n  filters.q = ''\r\n  filters.role = undefined\r\n  filters.department = ''\r\n  filters.is_active = undefined\r\n  filters.page = 1\r\n  loadUsers()\r\n}\r\n\r\nconst changePage = (page: number) => {\r\n  filters.page = page\r\n  loadUsers()\r\n}\r\n\r\nconst showCreateModal = () => {\r\n  editingUser.value = null\r\n  resetUserForm()\r\n  showModal.value = true\r\n}\r\n\r\nconst editUser = (user: User) => {\r\n  editingUser.value = user\r\n  userForm.username = user.username\r\n  userForm.chinese_name = user.chinese_name\r\n  userForm.department = user.department || ''\r\n  userForm.job_title = user.job_title || ''\r\n  userForm.role = user.role as UserRoleType\r\n  userForm.is_active = user.is_active\r\n  userForm.password = ''\r\n  confirmPassword.value = ''\r\n  showModal.value = true\r\n}\r\n\r\nconst closeModal = () => {\r\n  showModal.value = false\r\n  editingUser.value = null\r\n  resetUserForm()\r\n}\r\n\r\nconst resetUserForm = () => {\r\n  userForm.username = ''\r\n  userForm.chinese_name = ''\r\n  userForm.password = ''\r\n  userForm.department = ''\r\n  userForm.job_title = ''\r\n  userForm.role = 'Everyone' as UserRoleType\r\n  userForm.is_active = true\r\n  confirmPassword.value = ''\r\n}\r\n\r\nconst saveUser = async () => {\r\n  if (!editingUser.value && userForm.password !== confirmPassword.value) {\r\n    alert('密碼確認不符')\r\n    return\r\n  }\r\n\r\n  saving.value = true\r\n  try {\r\n    if (editingUser.value) {\r\n      // Update user\r\n      const updateData: UpdateUserRequest = {\r\n        chinese_name: userForm.chinese_name,\r\n        department: userForm.department,\r\n        job_title: userForm.job_title,\r\n        role: userForm.role,\r\n        is_active: userForm.is_active\r\n      }\r\n      await usersApi.updateUser(editingUser.value.user_id, updateData)\r\n    } else {\r\n      // Create user\r\n      const createData: CreateUserRequest = {\r\n        username: userForm.username,\r\n        chinese_name: userForm.chinese_name,\r\n        password: userForm.password,\r\n        department: userForm.department,\r\n        job_title: userForm.job_title,\r\n        role: userForm.role,\r\n        is_active: userForm.is_active\r\n      }\r\n      await usersApi.createUser(createData)\r\n    }\r\n\r\n    closeModal()\r\n    loadUsers()\r\n    loadStatistics()\r\n  } catch (error: any) {\r\n    alert(error.response?.data?.error?.message || '保存失败')\r\n  } finally {\r\n    saving.value = false\r\n  }\r\n}\r\n\r\nconst showResetPasswordModal = (user: User) => {\r\n  passwordUser.value = user\r\n  newPassword.value = ''\r\n  confirmNewPassword.value = ''\r\n  showPasswordModal.value = true\r\n}\r\n\r\nconst closePasswordModal = () => {\r\n  showPasswordModal.value = false\r\n  passwordUser.value = null\r\n  newPassword.value = ''\r\n  confirmNewPassword.value = ''\r\n}\r\n\r\nconst resetPassword = async () => {\r\n  if (newPassword.value !== confirmNewPassword.value) {\r\n    alert('密碼確認不符')\r\n    return\r\n  }\r\n\r\n  if (!passwordUser.value) return\r\n\r\n  resetting.value = true\r\n  try {\r\n    await usersApi.resetUserPassword(passwordUser.value.user_id, {\r\n      new_password: newPassword.value\r\n    })\r\n    closePasswordModal()\r\n    alert('密碼重置成功')\r\n  } catch (error: any) {\r\n    alert(error.response?.data?.error?.message || '密碼重置失败')\r\n  } finally {\r\n    resetting.value = false\r\n  }\r\n}\r\n\r\nconst deactivateUser = (user: User) => {\r\n  confirmMessage.value = `確定要停用用戶 \"${user.chinese_name}\" 嗎？`\r\n  confirmCallback.value = async () => {\r\n    try {\r\n      await usersApi.deleteUser(user.user_id)\r\n      loadUsers()\r\n      loadStatistics()\r\n    } catch (error: any) {\r\n      alert(error.response?.data?.error?.message || '停用失败')\r\n    }\r\n  }\r\n  showConfirmDialog.value = true\r\n}\r\n\r\nconst activateUser = async (user: User) => {\r\n  try {\r\n    await usersApi.activateUser(user.user_id)\r\n    loadUsers()\r\n    loadStatistics()\r\n  } catch (error: any) {\r\n    alert(error.response?.data?.error?.message || '啟用失败')\r\n  }\r\n}\r\n\r\nconst confirmAction = () => {\r\n  if (confirmCallback.value) {\r\n    confirmCallback.value()\r\n  }\r\n  cancelConfirm()\r\n}\r\n\r\nconst cancelConfirm = () => {\r\n  showConfirmDialog.value = false\r\n  confirmCallback.value = null\r\n  confirmMessage.value = ''\r\n}\r\n\r\nconst getRoleLabel = (role: string): string => {\r\n  const roleItem = roles.value.find(r => r.value === role)\r\n  return roleItem?.label || role\r\n}\r\n\r\nconst formatDate = (dateString?: string): string => {\r\n  if (!dateString) return '-'\r\n  return new Date(dateString).toLocaleString('zh-TW')\r\n}\r\n\r\n// Initialize\r\nonMounted(() => {\r\n  loadUsers()\r\n  loadRoles()\r\n  loadStatistics()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.users-management {\r\n  padding: 24px;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-bottom: 32px;\r\n}\r\n\r\n.header-left {\r\n  flex: 1;\r\n}\r\n\r\n.page-title {\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  margin: 0 0 16px 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.stats-cards {\r\n  display: flex;\r\n  gap: 16px;\r\n}\r\n\r\n.stat-card {\r\n  background: white;\r\n  padding: 16px 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  min-width: 120px;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #3498db;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  gap: 12px;\r\n}\r\n\r\n.search-panel {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.search-row {\r\n  display: flex;\r\n  gap: 16px;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.search-field {\r\n  display: flex;\r\n  flex: 1;\r\n  min-width: 300px;\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  padding: 8px 12px;\r\n  border: 1px solid #ddd;\r\n  border-right: none;\r\n  border-radius: 4px 0 0 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.search-btn {\r\n  padding: 8px 12px;\r\n  background: #3498db;\r\n  color: white;\r\n  border: 1px solid #3498db;\r\n  border-radius: 0 4px 4px 0;\r\n  cursor: pointer;\r\n}\r\n\r\n.filter-group {\r\n  display: flex;\r\n  gap: 12px;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.filter-select, .filter-input {\r\n  padding: 8px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  min-width: 120px;\r\n}\r\n\r\n.data-table-container {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.data-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.data-table th {\r\n  background: #f8f9fa;\r\n  padding: 16px 12px;\r\n  text-align: left;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  border-bottom: 1px solid #dee2e6;\r\n}\r\n\r\n.data-table td {\r\n  padding: 12px;\r\n  border-bottom: 1px solid #f1f3f4;\r\n  color: #2c3e50;\r\n}\r\n\r\n.table-row:hover {\r\n  background: #f8f9fa;\r\n}\r\n\r\n.role-badge {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n}\r\n\r\n.role-admin { background: #e74c3c; color: white; }\r\n.role-procurementmgr { background: #9b59b6; color: white; }\r\n.role-procurement { background: #3498db; color: white; }\r\n.role-accountant { background: #f39c12; color: white; }\r\n.role-everyone { background: #95a5a6; color: white; }\r\n\r\n.status-badge {\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n}\r\n\r\n.status-active { background: #2ecc71; color: white; }\r\n.status-inactive { background: #e74c3c; color: white; }\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.btn-icon {\r\n  padding: 6px 8px;\r\n  border: 1px solid #ddd;\r\n  background: white;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.btn-icon:hover {\r\n  background: #f8f9fa;\r\n}\r\n\r\n.btn-icon.btn-danger:hover {\r\n  background: #e74c3c;\r\n  color: white;\r\n  border-color: #e74c3c;\r\n}\r\n\r\n.btn-icon.btn-success:hover {\r\n  background: #2ecc71;\r\n  color: white;\r\n  border-color: #2ecc71;\r\n}\r\n\r\n.btn-icon:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.loading-spinner, .no-data {\r\n  text-align: center;\r\n  padding: 40px;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 16px;\r\n  padding: 20px;\r\n}\r\n\r\n.pagination-btn {\r\n  padding: 8px 16px;\r\n  border: 1px solid #ddd;\r\n  background: white;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination-btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.pagination-info {\r\n  color: #7f8c8d;\r\n  font-size: 14px;\r\n}\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 0;\r\n  max-width: 600px;\r\n  width: 90%;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 24px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #999;\r\n}\r\n\r\n.user-form, .password-form {\r\n  padding: 24px;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  gap: 16px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.form-field {\r\n  flex: 1;\r\n}\r\n\r\n.form-field label {\r\n  display: block;\r\n  margin-bottom: 6px;\r\n  font-weight: 500;\r\n  color: #2c3e50;\r\n}\r\n\r\n.form-input, .form-select {\r\n  width: 100%;\r\n  padding: 8px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.form-checkbox {\r\n  margin-right: 8px;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  margin-top: 24px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.btn {\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  border: 1px solid transparent;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n  background: #3498db;\r\n  color: white;\r\n  border-color: #3498db;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background: #2980b9;\r\n  border-color: #2980b9;\r\n}\r\n\r\n.btn-outline {\r\n  background: white;\r\n  color: #3498db;\r\n  border-color: #3498db;\r\n}\r\n\r\n.btn-outline:hover {\r\n  background: #3498db;\r\n  color: white;\r\n}\r\n\r\n.btn-danger {\r\n  background: #e74c3c;\r\n  color: white;\r\n  border-color: #e74c3c;\r\n}\r\n\r\n.btn-danger:hover {\r\n  background: #c0392b;\r\n  border-color: #c0392b;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.confirm-dialog {\r\n  max-width: 400px;\r\n}\r\n\r\n.confirm-content {\r\n  padding: 20px 24px;\r\n}\r\n\r\n.confirm-content p {\r\n  margin: 0;\r\n  color: #2c3e50;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Icons using CSS (you might want to use a proper icon library) */\r\n.icon-plus::before { content: '+'; }\r\n.icon-search::before { content: '🔍'; }\r\n.icon-edit::before { content: '✏️'; }\r\n.icon-key::before { content: '🔑'; }\r\n.icon-ban::before { content: '🚫'; }\r\n.icon-check::before { content: '✅'; }\r\n</style>"],"names":["authStore","useAuthStore","currentUser","computed","users","ref","roles","statistics","loading","saving","resetting","searchQuery","filters","reactive","pagination","showModal","showPasswordModal","showConfirmDialog","editingUser","passwordUser","userForm","confirmPassword","newPassword","confirmNewPassword","confirmMessage","confirmCallback","loadUsers","response","usersApi","error","loadRoles","loadStatistics","handleSearch","clearFilters","changePage","page","showCreateModal","resetUserForm","editUser","user","closeModal","saveUser","updateData","createData","_c","_b","_a","showResetPasswordModal","closePasswordModal","resetPassword","deactivateUser","activateUser","confirmAction","cancelConfirm","getRoleLabel","role","roleItem","r","formatDate","dateString","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_cache","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","_hoisted_8","_hoisted_10","_createTextVNode","_hoisted_12","_hoisted_13","_withDirectives","$event","_withKeys","_Fragment","_renderList","_hoisted_15","_hoisted_17","_normalizeClass","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_26","_hoisted_27","_hoisted_28","_createCommentVNode","_withModifiers","_hoisted_31","_hoisted_32","_hoisted_35","_hoisted_38","_hoisted_39","_hoisted_42","_hoisted_45","_hoisted_50"],"mappings":"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"}