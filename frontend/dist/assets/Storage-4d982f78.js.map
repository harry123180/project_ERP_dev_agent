{"version":3,"file":"Storage-4d982f78.js","sources":["../../src/views/inventory/Storage.vue"],"sourcesContent":["<template>\r\n  <div class=\"storage-management\">\r\n    <!-- Warehouse Structure Management -->\r\n    <div class=\"structure-section\">\r\n      <el-card>\r\n        <template #header>\r\n          <div class=\"card-header\">\r\n            <span>倉庫結構管理</span>\r\n            <div>\r\n              <el-button type=\"primary\" @click=\"showCreateZoneDialog = true\">\r\n                <el-icon><Plus /></el-icon>\r\n                新增區域\r\n              </el-button>\r\n              <el-button @click=\"loadStorageTree\">\r\n                <el-icon><Refresh /></el-icon>\r\n                重新整理\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        \r\n        <div class=\"structure-tree\">\r\n          <el-tree\r\n            :data=\"storageTreeData\"\r\n            :props=\"treeProps\"\r\n            node-key=\"id\"\r\n            :expand-on-click-node=\"false\"\r\n            :default-expand-all=\"false\"\r\n            class=\"storage-tree\"\r\n          >\r\n            <template #default=\"{ node, data }\">\r\n              <div class=\"tree-node\">\r\n                <div class=\"node-info\">\r\n                  <el-icon v-if=\"data.type === 'area'\" class=\"node-icon\"><Location /></el-icon>\r\n                  <el-icon v-else-if=\"data.type === 'shelf'\" class=\"node-icon\"><Grid /></el-icon>\r\n                  <el-icon v-else-if=\"data.type === 'floor'\" class=\"node-icon\"><Coin /></el-icon>\r\n                  <el-icon v-else class=\"node-icon\"><Box /></el-icon>\r\n                  \r\n                  <span class=\"node-label\">{{ data.label }}</span>\r\n                  <el-tag v-if=\"data.capacity !== undefined\" size=\"small\" type=\"info\">\r\n                    {{ data.used || 0 }}/{{ data.capacity }}\r\n                  </el-tag>\r\n                  <el-tag v-if=\"data.utilization !== undefined\" size=\"small\" :type=\"getUtilizationType(data.utilization)\">\r\n                    {{ Math.round(data.utilization) }}%\r\n                  </el-tag>\r\n                </div>\r\n                <div class=\"node-actions\">\r\n                  <el-button-group v-if=\"data.type === 'floor'\">\r\n                    <el-button size=\"small\" type=\"primary\" @click.stop=\"viewFloorDetail(data)\">\r\n                      <el-icon><View /></el-icon>\r\n                    </el-button>\r\n                    <el-button size=\"small\" type=\"warning\" @click.stop=\"editFloor(data)\" :disabled=\"data.used > 0\">\r\n                      <el-icon><Edit /></el-icon>\r\n                    </el-button>\r\n                  </el-button-group>\r\n                  <el-button v-else-if=\"data.children && data.children.length > 0\" size=\"small\" @click.stop=\"expandCollapse(node)\">\r\n                    <el-icon><CaretRight /></el-icon>\r\n                  </el-button>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </el-tree>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- Pending Storage Items -->\r\n    <div class=\"pending-section\">\r\n      <el-card>\r\n        <template #header>\r\n          <div class=\"card-header\">\r\n            <span>待入庫物料 ({{ pendingItems.length }} 項)</span>\r\n            <div>\r\n              <el-button type=\"success\" @click=\"batchAssignStorage\" :disabled=\"!selectedPendingItems.length\">\r\n                <el-icon><Check /></el-icon>\r\n                批量入庫\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        \r\n        <el-table \r\n          :data=\"pendingItems\"\r\n          v-loading=\"pendingLoading\"\r\n          @selection-change=\"handlePendingSelectionChange\"\r\n          stripe\r\n        >\r\n          <el-table-column type=\"selection\" width=\"55\" />\r\n          <el-table-column prop=\"item_name\" label=\"物料名稱\" width=\"200\" />\r\n          <el-table-column prop=\"quantity\" label=\"數量\" width=\"120\" align=\"right\">\r\n            <template #default=\"{ row }\">\r\n              {{ row.quantity }} {{ row.unit }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"source_po_number\" label=\"來源採購單號\" width=\"150\">\r\n            <template #default=\"{ row }\">\r\n              <el-link type=\"primary\" @click=\"viewSourceDocument(row.source_po_number)\">\r\n                {{ row.source_po_number }}\r\n              </el-link>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"arrival_date\" label=\"到貨時間\" width=\"150\">\r\n            <template #default=\"{ row }\">\r\n              {{ formatDateTime(row.arrival_date) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"receiver\" label=\"收貨人\" width=\"100\" />\r\n          <el-table-column label=\"操作\" width=\"150\">\r\n            <template #default=\"{ row }\">\r\n              <el-button size=\"small\" type=\"primary\" @click=\"assignStorageLocation(row)\">\r\n                <el-icon><Location /></el-icon>\r\n                指定儲位\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- Manual Inventory Entry -->\r\n    <div class=\"manual-entry-section\">\r\n      <el-card>\r\n        <template #header>\r\n          <div class=\"card-header\">\r\n            <span>手動入庫管理</span>\r\n            <el-button type=\"primary\" @click=\"showManualEntryDialog = true\">\r\n              <el-icon><Plus /></el-icon>\r\n              手動入庫\r\n            </el-button>\r\n          </div>\r\n        </template>\r\n        \r\n        <div class=\"manual-entry-description\">\r\n          <el-alert \r\n            title=\"手動入庫用於直接將物料加入庫存，不需要先經過收貨流程。適用於調撥、盤點或特殊情況。\" \r\n            type=\"info\" \r\n            show-icon\r\n            :closable=\"false\" \r\n          />\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- Storage Statistics -->\r\n    <div class=\"stats-section\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-value\">{{ storageStats.totalPositions }}</div>\r\n              <div class=\"stat-label\">總儲位數</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-value\">{{ storageStats.usedPositions }}</div>\r\n              <div class=\"stat-label\">已使用</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-value\">{{ storageStats.utilizationRate }}%</div>\r\n              <div class=\"stat-label\">使用率</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card class=\"stat-card\">\r\n            <div class=\"stat-item\">\r\n              <div class=\"stat-value\">{{ pendingItems.length }}</div>\r\n              <div class=\"stat-label\">待入庫</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <!-- Create Zone Dialog -->\r\n    <el-dialog v-model=\"showCreateZoneDialog\" title=\"新增區域\" width=\"750px\">\r\n      <el-form :model=\"createZoneForm\" :rules=\"createZoneRules\" ref=\"createZoneFormRef\" label-width=\"120px\">\r\n        <el-form-item label=\"區域代碼\" prop=\"area_code\">\r\n          <el-input v-model=\"createZoneForm.area_code\" placeholder=\"例如: Z1, Z2, Z3\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"區域名稱\">\r\n          <el-input v-model=\"createZoneForm.area_name\" placeholder=\"輸入區域名稱\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"貨架配置\">\r\n          <div class=\"shelves-config\" style=\"max-height: 300px; overflow-y: auto;\">\r\n            <div v-for=\"(shelf, index) in createZoneForm.shelves\" :key=\"index\" class=\"shelf-item\">\r\n              <el-row :gutter=\"10\" align=\"middle\">\r\n                <el-col :span=\"4\">\r\n                  <el-input v-model=\"shelf.shelf_code\" placeholder=\"代碼\" size=\"small\" />\r\n                </el-col>\r\n                <el-col :span=\"5\">\r\n                  <el-input-number v-model=\"shelf.floors\" :min=\"1\" :max=\"10\" placeholder=\"樓層數\" size=\"small\" style=\"width: 100%\" />\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                  <el-input v-model=\"shelf.description\" placeholder=\"說明\" size=\"small\" />\r\n                </el-col>\r\n                <el-col :span=\"3\">\r\n                  <el-button @click=\"removeShelf(index)\" type=\"danger\" size=\"small\" circle>\r\n                    <el-icon><Delete /></el-icon>\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </div>\r\n            <el-button @click=\"addShelf\" type=\"primary\" size=\"small\">\r\n              <el-icon><Plus /></el-icon>\r\n              新增貨架\r\n            </el-button>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <template #footer>\r\n        <el-button @click=\"showCreateZoneDialog = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"createZone\" :loading=\"createZoneLoading\">創建</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- Assign Storage Dialog -->\r\n    <el-dialog v-model=\"showAssignDialog\" title=\"指定儲存位置\" width=\"700px\">\r\n      <div v-if=\"currentAssignItem\" class=\"assign-content\">\r\n        <div class=\"item-info\">\r\n          <h4>物料資訊</h4>\r\n          <el-descriptions :column=\"2\" border>\r\n            <el-descriptions-item label=\"物料名稱\">{{ currentAssignItem.item_name }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"規格\">{{ currentAssignItem.specification }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"數量\">{{ currentAssignItem.quantity }} {{ currentAssignItem.unit }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"來源採購單號\">{{ currentAssignItem.source_po_number }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"到貨時間\">{{ formatDateTime(currentAssignItem.arrival_date) }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"收貨人\">{{ currentAssignItem.receiver }}</el-descriptions-item>\r\n          </el-descriptions>\r\n        </div>\r\n        \r\n        <div class=\"location-selection\">\r\n          <h4>選擇儲存位置</h4>\r\n          <el-form :model=\"assignForm\" label-width=\"100px\">\r\n            <el-row :gutter=\"10\">\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"區域\">\r\n                  <el-select v-model=\"assignForm.area\" @change=\"onAreaChange\" style=\"width: 100%\">\r\n                    <el-option v-for=\"area in availableAreas\" :key=\"area.code\" :label=\"area.label\" :value=\"area.code\" />\r\n                  </el-select>\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"貨架\">\r\n                  <el-select v-model=\"assignForm.shelf\" @change=\"onShelfChange\" style=\"width: 100%\">\r\n                    <el-option v-for=\"shelf in availableShelves\" :key=\"shelf.code\" :label=\"shelf.label\" :value=\"shelf.code\" />\r\n                  </el-select>\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"樓層\">\r\n                  <el-select v-model=\"assignForm.floor\" style=\"width: 100%\">\r\n                    <el-option v-for=\"floor in availableFloors\" :key=\"floor\" :label=\"`第${floor}層`\" :value=\"floor\" />\r\n                  </el-select>\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n          </el-form>\r\n          \r\n        </div>\r\n      </div>\r\n      \r\n      <template #footer>\r\n        <el-button @click=\"showAssignDialog = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmAssignment\" :loading=\"assignLoading\" :disabled=\"!isValidAssignment\">\r\n          確認入庫\r\n        </el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- Manual Entry Dialog -->\r\n    <el-dialog v-model=\"showManualEntryDialog\" title=\"手動入庫\" width=\"700px\">\r\n      <el-form :model=\"manualEntryForm\" :rules=\"manualEntryRules\" ref=\"manualEntryFormRef\" label-width=\"120px\">\r\n        <el-form-item label=\"物料名稱\" prop=\"item_name\">\r\n          <el-input v-model=\"manualEntryForm.item_name\" placeholder=\"輸入物料名稱\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"規格\" prop=\"specification\">\r\n          <el-input v-model=\"manualEntryForm.specification\" placeholder=\"輸入物料規格\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"數量\" prop=\"quantity\">\r\n          <el-row :gutter=\"10\">\r\n            <el-col :span=\"16\">\r\n              <el-input-number v-model=\"manualEntryForm.quantity\" :min=\"1\" placeholder=\"數量\" style=\"width: 100%\" />\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <el-input v-model=\"manualEntryForm.unit\" placeholder=\"單位\" />\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <el-form-item label=\"儲存位置\">\r\n          <el-row :gutter=\"10\">\r\n            <el-col :span=\"8\">\r\n              <el-select v-model=\"manualEntryForm.area\" @change=\"onAreaChange\" placeholder=\"選擇區域\" style=\"width: 100%\">\r\n                <el-option v-for=\"area in availableAreas\" :key=\"area.code\" :label=\"area.label\" :value=\"area.code\" />\r\n              </el-select>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <el-select v-model=\"manualEntryForm.shelf\" @change=\"onShelfChange\" placeholder=\"選擇貨架\" style=\"width: 100%\">\r\n                <el-option v-for=\"shelf in availableShelves\" :key=\"shelf.code\" :label=\"shelf.label\" :value=\"shelf.code\" />\r\n              </el-select>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <el-select v-model=\"manualEntryForm.floor\" placeholder=\"選擇樓層\" style=\"width: 100%\">\r\n                <el-option v-for=\"floor in availableFloors\" :key=\"floor\" :label=\"`第${floor}層`\" :value=\"floor\" />\r\n              </el-select>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <el-form-item label=\"備註\">\r\n          <el-input v-model=\"manualEntryForm.remarks\" type=\"textarea\" rows=\"3\" placeholder=\"輸入備註或理由\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <template #footer>\r\n        <el-button @click=\"showManualEntryDialog = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmManualEntry\" :loading=\"manualEntryLoading\">確認入庫</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- Position Detail Dialog -->\r\n    <el-dialog v-model=\"showPositionDetail\" title=\"儲位詳情\" width=\"800px\">\r\n      <div v-if=\"currentPosition\" class=\"position-detail\">\r\n        <div class=\"basic-info\">\r\n          <h4>基本資訊</h4>\r\n          <el-descriptions :column=\"2\" border>\r\n            <el-descriptions-item label=\"儲位編號\">{{ currentPosition.storage_id }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"位置\">\r\n              {{ currentPosition.area_code }}-{{ currentPosition.shelf_code }}-第{{ currentPosition.floor_level }}層-\r\n              {{ getPositionName(currentPosition.front_back_position, currentPosition.left_middle_right_position) }}\r\n            </el-descriptions-item>\r\n            <el-descriptions-item label=\"狀態\">\r\n              <el-tag :type=\"currentPosition.is_active ? 'success' : 'danger'\">\r\n                {{ currentPosition.is_active ? '啟用' : '停用' }}\r\n              </el-tag>\r\n            </el-descriptions-item>\r\n            <el-descriptions-item label=\"建立時間\">{{ formatDateTime(currentPosition.created_at) }}</el-descriptions-item>\r\n          </el-descriptions>\r\n        </div>\r\n        \r\n        <div class=\"inventory-info\">\r\n          <h4>庫存資訊</h4>\r\n          <el-table :data=\"currentPosition.inventory\" size=\"small\">\r\n            <el-table-column prop=\"item_id\" label=\"物料名稱\" />\r\n            <el-table-column prop=\"current_quantity\" label=\"数量\" width=\"100\" />\r\n            <el-table-column prop=\"source_no\" label=\"來源單號\" width=\"120\" />\r\n            <el-table-column prop=\"source_line\" label=\"明細行\" width=\"80\" />\r\n          </el-table>\r\n        </div>\r\n        \r\n        <div class=\"movement-history\">\r\n          <h4>異動履歷</h4>\r\n          <el-table :data=\"currentPosition.movements\" size=\"small\" max-height=\"300\">\r\n            <el-table-column prop=\"operation_date\" label=\"日期\" width=\"120\">\r\n              <template #default=\"{ row }\">\r\n                {{ formatDate(row.operation_date) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"operation_type\" label=\"操作\" width=\"80\">\r\n              <template #default=\"{ row }\">\r\n                <el-tag :type=\"row.operation_type === 'in' ? 'success' : 'warning'\" size=\"small\">\r\n                  {{ row.operation_type === 'in' ? '入庫' : '出庫' }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"item_id\" label=\"物料\" />\r\n            <el-table-column prop=\"quantity\" label=\"數量\" width=\"100\" align=\"right\" />\r\n            <el-table-column prop=\"operator_name\" label=\"操作人\" width=\"100\" />\r\n            <el-table-column prop=\"note\" label=\"備註\" />\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n      \r\n      <template #footer>\r\n        <el-button @click=\"showPositionDetail = false\">關閉</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { \r\n  Plus, Refresh, View, Edit, Check, Delete, Location, \r\n  Grid, Coin, Box, CaretRight, Lock, Star, \r\n  CircleCheck \r\n} from '@element-plus/icons-vue'\r\nimport { inventoryApi, type PendingStorageItem, type StorageAssignmentRequest, type ManualEntryRequest } from '@/api/inventory'\r\nimport { useAuthStore } from '@/stores/auth'\r\n\r\n// Auth store\r\nconst authStore = useAuthStore()\r\n\r\n// Reactive data\r\nconst storageTreeData = ref<any[]>([])\r\nconst pendingItems = ref<any[]>([])\r\nconst selectedPendingItems = ref<any[]>([])\r\nconst pendingLoading = ref(false)\r\nconst createZoneLoading = ref(false)\r\nconst assignLoading = ref(false)\r\n\r\n// Dialog states\r\nconst showCreateZoneDialog = ref(false)\r\nconst showAssignDialog = ref(false)\r\nconst showPositionDetail = ref(false)\r\nconst showManualEntryDialog = ref(false)\r\nconst manualEntryLoading = ref(false)\r\n\r\n// Current data\r\nconst currentAssignItem = ref<any>(null)\r\nconst currentPosition = ref<any>(null)\r\n\r\n// Tree props\r\nconst treeProps = {\r\n  children: 'children',\r\n  label: 'label'\r\n}\r\n\r\n// Forms\r\nconst createZoneForm = reactive({\r\n  area_code: '',\r\n  area_name: '',\r\n  shelves: [\r\n    { shelf_code: 'A', floors: 6, description: '' }\r\n  ]\r\n})\r\n\r\nconst assignForm = reactive({\r\n  area: '',\r\n  shelf: '',\r\n  floor: 1\r\n})\r\n\r\nconst manualEntryForm = reactive({\r\n  item_name: '',\r\n  specification: '',\r\n  quantity: 1,\r\n  unit: '',\r\n  area: '',\r\n  shelf: '',\r\n  floor: 1,\r\n  remarks: ''\r\n})\r\n\r\n// Form rules\r\nconst createZoneRules = {\r\n  area_code: [\r\n    { required: true, message: '請輸入區域代碼', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\nconst manualEntryRules = {\r\n  item_name: [\r\n    { required: true, message: '請輸入物料名稱', trigger: 'blur' }\r\n  ],\r\n  specification: [\r\n    { required: true, message: '請輸入物料規格', trigger: 'blur' }\r\n  ],\r\n  quantity: [\r\n    { required: true, message: '請輸入數量', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// Available options for assignment\r\nconst availableAreas = ref<any[]>([])\r\nconst availableShelves = ref<any[]>([])\r\nconst availableFloors = ref<number[]>([])\r\n\r\n\r\n// Storage statistics\r\nconst storageStats = computed(() => {\r\n  // Calculate from storage tree data\r\n  let totalPositions = 0\r\n  let usedPositions = 0\r\n  \r\n  const calculateStats = (nodes: any[]) => {\r\n    for (const node of nodes) {\r\n      if (node.type === 'floor') {\r\n        totalPositions += node.capacity || 0\r\n        usedPositions += node.used || 0\r\n      }\r\n      if (node.children) {\r\n        calculateStats(node.children)\r\n      }\r\n    }\r\n  }\r\n  \r\n  calculateStats(storageTreeData.value)\r\n  \r\n  return {\r\n    totalPositions,\r\n    usedPositions,\r\n    utilizationRate: totalPositions > 0 ? Math.round((usedPositions / totalPositions) * 100) : 0\r\n  }\r\n})\r\n\r\n// Computed properties\r\nconst isValidAssignment = computed(() => {\r\n  return assignForm.area && assignForm.shelf && assignForm.floor\r\n})\r\n\r\n// Methods\r\nconst loadStorageTree = async () => {\r\n  try {\r\n    // Mock data - in real implementation, call the storage API\r\n    storageTreeData.value = [\r\n      {\r\n        id: 'z1',\r\n        label: 'Z1 區',\r\n        type: 'area',\r\n        children: [\r\n          {\r\n            id: 'z1-a',\r\n            label: 'A 貨架',\r\n            type: 'shelf',\r\n            children: [\r\n              {\r\n                id: 'z1-a-1',\r\n                label: '第1層',\r\n                type: 'floor',\r\n                storage_id: 'Z1-A-1',\r\n                capacity: 6,\r\n                used: 1,\r\n                utilization: 17,\r\n                children: []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    \r\n    // Update available options from actual tree data\r\n    availableAreas.value = storageTreeData.value\r\n      .filter(node => node.type === 'area')\r\n      .map(node => ({\r\n        code: node.id.toUpperCase(),\r\n        label: node.label\r\n      }))\r\n  } catch (error) {\r\n    ElMessage.error('載入倉庫結構失敗')\r\n  }\r\n}\r\n\r\nconst loadPendingItems = async () => {\r\n  try {\r\n    pendingLoading.value = true\r\n    \r\n    // Get pending storage items from API\r\n    const data = await inventoryApi.getPendingStorageItems()\r\n    pendingItems.value = data\r\n    \r\n  } catch (error) {\r\n    console.error('Failed to load pending storage items:', error)\r\n    ElMessage.error('載入待入庫物料失敗')\r\n  } finally {\r\n    pendingLoading.value = false\r\n  }\r\n}\r\n\r\nconst handlePendingSelectionChange = (selection: any[]) => {\r\n  selectedPendingItems.value = selection\r\n}\r\n\r\nconst addShelf = () => {\r\n  createZoneForm.shelves.push({\r\n    shelf_code: '',\r\n    floors: 6,\r\n    description: ''\r\n  })\r\n}\r\n\r\nconst removeShelf = (index: number) => {\r\n  createZoneForm.shelves.splice(index, 1)\r\n}\r\n\r\nconst createZone = async () => {\r\n  try {\r\n    createZoneLoading.value = true\r\n    \r\n    // Validate form\r\n    if (!createZoneForm.area_code || !createZoneForm.area_name) {\r\n      ElMessage.warning('請填寫區域代碼和名稱')\r\n      return\r\n    }\r\n    \r\n    // Check for duplicate zone code\r\n    const existingZone = storageTreeData.value.find(\r\n      zone => zone.id === createZoneForm.area_code.toLowerCase()\r\n    )\r\n    if (existingZone) {\r\n      ElMessage.error(`區域代碼 ${createZoneForm.area_code} 已存在`)\r\n      return\r\n    }\r\n    \r\n    // Collect all existing shelf codes across all zones\r\n    const existingShelfCodes = new Set<string>()\r\n    storageTreeData.value.forEach(zone => {\r\n      if (zone.children) {\r\n        zone.children.forEach(shelf => {\r\n          const shelfCode = shelf.label.split(' ')[0]\r\n          existingShelfCodes.add(shelfCode)\r\n        })\r\n      }\r\n    })\r\n    \r\n    // Validate shelf codes are unique\r\n    for (const shelf of createZoneForm.shelves) {\r\n      if (shelf.shelf_code && existingShelfCodes.has(shelf.shelf_code)) {\r\n        ElMessage.error(`貨架代碼 ${shelf.shelf_code} 已在其他區域使用，請使用不同的代碼`)\r\n        return\r\n      }\r\n    }\r\n    \r\n    // Create new zone structure\r\n    const newZone = {\r\n      id: createZoneForm.area_code.toLowerCase(),\r\n      label: `${createZoneForm.area_code} ${createZoneForm.area_name}`,\r\n      type: 'area',\r\n      children: []\r\n    }\r\n    \r\n    // Add shelves to the zone\r\n    createZoneForm.shelves.forEach((shelf, shelfIndex) => {\r\n      if (shelf.shelf_code) {\r\n        const shelfNode = {\r\n          id: `${newZone.id}-${shelf.shelf_code.toLowerCase()}`,\r\n          label: `${shelf.shelf_code} 貨架`,\r\n          type: 'shelf',\r\n          children: []\r\n        }\r\n        \r\n        // Add floors to the shelf\r\n        for (let floor = 1; floor <= shelf.floors; floor++) {\r\n          const floorNode = {\r\n            id: `${shelfNode.id}-${floor}`,\r\n            label: `第${floor}層`,\r\n            type: 'floor',\r\n            storage_id: `${createZoneForm.area_code}-${shelf.shelf_code}-${floor}`,\r\n            capacity: 6,  // 6 positions per floor (2x3 grid)\r\n            used: 0,\r\n            utilization: 0,\r\n            children: []\r\n          }\r\n          \r\n          shelfNode.children.push(floorNode)\r\n        }\r\n        \r\n        newZone.children.push(shelfNode)\r\n      }\r\n    })\r\n    \r\n    // Add the new zone to the tree\r\n    storageTreeData.value.push(newZone)\r\n    \r\n    // Update available areas\r\n    availableAreas.value.push({\r\n      code: createZoneForm.area_code,\r\n      label: `${createZoneForm.area_code} ${createZoneForm.area_name}`\r\n    })\r\n    \r\n    ElMessage.success('區域建立成功')\r\n    showCreateZoneDialog.value = false\r\n    \r\n    // Reset form\r\n    createZoneForm.area_code = ''\r\n    createZoneForm.area_name = ''\r\n    createZoneForm.shelves = [{ shelf_code: 'A', floors: 6, description: '' }]\r\n    \r\n  } catch (error) {\r\n    ElMessage.error('建立區域失敗')\r\n  } finally {\r\n    createZoneLoading.value = false\r\n  }\r\n}\r\n\r\nconst assignStorageLocation = (item: any) => {\r\n  currentAssignItem.value = item\r\n  assignForm.area = ''\r\n  assignForm.shelf = ''\r\n  assignForm.floor = 1\r\n  showAssignDialog.value = true\r\n}\r\n\r\nconst onAreaChange = () => {\r\n  assignForm.shelf = ''\r\n  assignForm.floor = 1\r\n  \r\n  // Find the selected area in the tree\r\n  const selectedArea = storageTreeData.value.find(\r\n    area => area.id === assignForm.area.toLowerCase()\r\n  )\r\n  \r\n  // Update available shelves from actual area data\r\n  if (selectedArea && selectedArea.children) {\r\n    availableShelves.value = selectedArea.children\r\n      .filter(node => node.type === 'shelf')\r\n      .map(shelf => ({\r\n        code: shelf.label.split(' ')[0], // Extract shelf code from label\r\n        label: shelf.label\r\n      }))\r\n  } else {\r\n    availableShelves.value = []\r\n  }\r\n}\r\n\r\nconst onShelfChange = () => {\r\n  assignForm.floor = 1\r\n  \r\n  // Find the selected shelf in the tree\r\n  const selectedArea = storageTreeData.value.find(\r\n    area => area.id === assignForm.area.toLowerCase()\r\n  )\r\n  \r\n  if (selectedArea && selectedArea.children) {\r\n    const selectedShelf = selectedArea.children.find(\r\n      shelf => shelf.label.split(' ')[0] === assignForm.shelf\r\n    )\r\n    \r\n    // Update available floors from actual shelf data\r\n    if (selectedShelf && selectedShelf.children) {\r\n      availableFloors.value = selectedShelf.children\r\n        .filter(node => node.type === 'floor')\r\n        .map(floor => {\r\n          const match = floor.label.match(/第(\\d+)層/)\r\n          return match ? parseInt(match[1]) : 1\r\n        })\r\n    } else {\r\n      availableFloors.value = []\r\n    }\r\n  } else {\r\n    availableFloors.value = []\r\n  }\r\n}\r\n\r\n\r\n\r\nconst confirmAssignment = async () => {\r\n  try {\r\n    assignLoading.value = true\r\n    \r\n    const assignData: StorageAssignmentRequest = {\r\n      item_ref: {\r\n        id: currentAssignItem.value.id,\r\n        po_no: currentAssignItem.value.source_po_number,\r\n        item_name: currentAssignItem.value.item_name,\r\n        quantity: currentAssignItem.value.quantity,\r\n        receiver: currentAssignItem.value.receiver,\r\n        arrival_date: currentAssignItem.value.arrival_date\r\n      },\r\n      area: assignForm.area,\r\n      shelf: assignForm.shelf,\r\n      floor: assignForm.floor\r\n    }\r\n    \r\n    // Call API to assign storage location and complete the putaway process\r\n    await inventoryApi.assignStorageLocation(assignData)\r\n    \r\n    // Remove the item from the pending list immediately since it's now stored\r\n    const itemIndex = pendingItems.value.findIndex(item => item.id === currentAssignItem.value.id)\r\n    if (itemIndex >= 0) {\r\n      pendingItems.value.splice(itemIndex, 1)\r\n    }\r\n    \r\n    ElMessage.success('儲位指定成功，物料已完成入庫並移除待入庫清單')\r\n    showAssignDialog.value = false\r\n    await loadStorageTree() // Refresh storage tree to show updated utilization\r\n  } catch (error) {\r\n    console.error('Failed to assign storage location:', error)\r\n    ElMessage.error('指定儲位失敗')\r\n  } finally {\r\n    assignLoading.value = false\r\n  }\r\n}\r\n\r\n\r\nconst batchAssignStorage = async () => {\r\n  try {\r\n    await ElMessageBox.confirm(`確認批量入庫 ${selectedPendingItems.value.length} 項物料？`, '批量入庫', {\r\n      type: 'warning'\r\n    })\r\n    \r\n    // Remove selected items from the pending list immediately\r\n    const selectedIds = selectedPendingItems.value.map(item => item.id)\r\n    pendingItems.value = pendingItems.value.filter(item => !selectedIds.includes(item.id))\r\n    selectedPendingItems.value = []\r\n    \r\n    ElMessage.success('批量入庫成功，物料已移除待入庫清單')\r\n  } catch (error) {\r\n    // User cancelled or API error\r\n  }\r\n}\r\n\r\n\r\nconst viewFloorDetail = async (floor: any) => {\r\n  // Show floor details - capacity, usage, items stored\r\n  ElMessage.info(`查看樓層詳情: ${floor.label} - 容量: ${floor.used}/${floor.capacity}`)\r\n  // In a real implementation, this would open a dialog showing all items on this floor\r\n}\r\n\r\nconst editFloor = (floor: any) => {\r\n  ElMessage.info('編輯樓層功能開發中')\r\n}\r\n\r\nconst confirmManualEntry = async () => {\r\n  try {\r\n    manualEntryLoading.value = true\r\n    \r\n    if (!manualEntryForm.area || !manualEntryForm.shelf || !manualEntryForm.floor) {\r\n      ElMessage.warning('請選擇完整的儲存位置')\r\n      return\r\n    }\r\n    \r\n    const entryData: ManualEntryRequest = {\r\n      item_name: manualEntryForm.item_name,\r\n      specification: manualEntryForm.specification,\r\n      quantity: manualEntryForm.quantity,\r\n      unit: manualEntryForm.unit,\r\n      storage_location: {\r\n        area: manualEntryForm.area,\r\n        shelf: manualEntryForm.shelf,\r\n        floor: manualEntryForm.floor\r\n      },\r\n      remarks: manualEntryForm.remarks\r\n    }\r\n    \r\n    // Call API to create manual inventory entry\r\n    await inventoryApi.createManualEntry(entryData)\r\n    \r\n    ElMessage.success('手動入庫成功')\r\n    showManualEntryDialog.value = false\r\n    \r\n    // Reset form\r\n    manualEntryForm.item_name = ''\r\n    manualEntryForm.specification = ''\r\n    manualEntryForm.quantity = 1\r\n    manualEntryForm.unit = ''\r\n    manualEntryForm.area = ''\r\n    manualEntryForm.shelf = ''\r\n    manualEntryForm.floor = 1\r\n    manualEntryForm.remarks = ''\r\n    \r\n    await loadStorageTree() // Refresh storage tree\r\n  } catch (error) {\r\n    console.error('Failed to create manual entry:', error)\r\n    ElMessage.error('手動入庫失敗')\r\n  } finally {\r\n    manualEntryLoading.value = false\r\n  }\r\n}\r\n\r\nconst expandCollapse = (node: any) => {\r\n  node.expanded = !node.expanded\r\n}\r\n\r\nconst viewSourceDocument = (poNumber: string) => {\r\n  // Navigate to purchase order detail page\r\n  window.open(`/purchase-orders/${poNumber}`, '_blank')\r\n}\r\n\r\n// Utility functions\r\nconst getUtilizationType = (utilization: number) => {\r\n  if (utilization >= 90) return 'danger'\r\n  if (utilization >= 70) return 'warning'\r\n  if (utilization >= 30) return 'success'\r\n  return 'info'\r\n}\r\n\r\nconst getPositionName = (frontBack: number, leftMiddleRight: number) => {\r\n  const fbMap = { 1: '前', 2: '後' }\r\n  const lmrMap = { 1: '左', 2: '中', 3: '右' }\r\n  return `${fbMap[frontBack]}${lmrMap[leftMiddleRight]}`\r\n}\r\n\r\n\r\nconst formatDate = (date: string | Date) => {\r\n  const d = typeof date === 'string' ? new Date(date) : date\r\n  return d.toLocaleDateString('zh-TW')\r\n}\r\n\r\nconst formatDateTime = (date: string | Date) => {\r\n  const d = typeof date === 'string' ? new Date(date) : date\r\n  return d.toLocaleString('zh-TW')\r\n}\r\n\r\n// Initialize\r\nonMounted(() => {\r\n  loadStorageTree()\r\n  loadPendingItems()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.storage-management {\r\n  padding: 20px;\r\n}\r\n\r\n.structure-section,\r\n.pending-section,\r\n.manual-entry-section,\r\n.stats-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.structure-tree {\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.tree-node {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 0;\r\n  width: 100%;\r\n}\r\n\r\n.node-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.node-icon {\r\n  color: #409eff;\r\n}\r\n\r\n.node-label {\r\n  font-weight: 500;\r\n}\r\n\r\n.node-actions {\r\n  opacity: 0.7;\r\n}\r\n\r\n.node-actions:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.stat-card {\r\n  text-align: center;\r\n}\r\n\r\n.stat-item {\r\n  padding: 10px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #409eff;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.shelves-config {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.shelf-item {\r\n  padding: 10px;\r\n  border: 1px solid #e4e7ed;\r\n  border-radius: 6px;\r\n}\r\n\r\n.assign-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n\r\n.position-detail {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.basic-info h4,\r\n.inventory-info h4,\r\n.movement-history h4 {\r\n  margin-bottom: 10px;\r\n  color: #303133;\r\n}\r\n\r\n.manual-entry-description {\r\n  margin-bottom: 15px;\r\n}\r\n</style>"],"names":["useAuthStore","storageTreeData","ref","pendingItems","selectedPendingItems","pendingLoading","createZoneLoading","assignLoading","showCreateZoneDialog","showAssignDialog","showPositionDetail","showManualEntryDialog","manualEntryLoading","currentAssignItem","currentPosition","treeProps","createZoneForm","reactive","assignForm","manualEntryForm","createZoneRules","manualEntryRules","availableAreas","availableShelves","availableFloors","storageStats","computed","totalPositions","usedPositions","calculateStats","nodes","node","isValidAssignment","loadStorageTree","ElMessage","loadPendingItems","data","inventoryApi","error","handlePendingSelectionChange","selection","addShelf","removeShelf","index","createZone","zone","existingShelfCodes","shelf","shelfCode","newZone","shelfIndex","shelfNode","floor","floorNode","assignStorageLocation","item","onAreaChange","selectedArea","area","onShelfChange","selectedShelf","match","confirmAssignment","assignData","itemIndex","batchAssignStorage","ElMessageBox","selectedIds","viewFloorDetail","editFloor","confirmManualEntry","entryData","expandCollapse","viewSourceDocument","poNumber","getUtilizationType","utilization","getPositionName","frontBack","leftMiddleRight","fbMap","lmrMap","formatDate","date","formatDateTime","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_card","_withCtx","_hoisted_3","_cache","_component_el_button","$event","_component_el_icon","_unref","Plus","Refresh","_hoisted_4","_component_el_tree","_hoisted_5","_hoisted_6","_createBlock","Location","Grid","Coin","Box","_component_el_tag","_createTextVNode","_toDisplayString","_component_el_button_group","_withModifiers","View","Edit","CaretRight","_hoisted_10","Check","_withDirectives","_component_el_table","_component_el_table_column","row","_component_el_link","_hoisted_12","_hoisted_13","_component_el_alert","_component_el_row","_component_el_col","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_component_el_form","_component_el_form_item","_component_el_input","_hoisted_23","_Fragment","_renderList","_component_el_input_number","Delete","_hoisted_24","_hoisted_25","_component_el_descriptions","_component_el_descriptions_item","_component_el_select","_hoisted_27","_hoisted_28"],"mappings":"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"}