"""Initial migration for PostgreSQL

Revision ID: 889acf7a64dd
Revises: 
Create Date: 2025-09-20 18:43:43.706994

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '889acf7a64dd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory_items_view',
    sa.Column('item_key', sa.String(length=255), nullable=False),
    sa.Column('item_name', sa.String(length=200), nullable=False),
    sa.Column('item_specification', sa.Text(), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('total_quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('batch_count', sa.Integer(), nullable=True),
    sa.Column('storage_location_count', sa.Integer(), nullable=True),
    sa.Column('last_received_date', sa.Date(), nullable=True),
    sa.Column('last_issued_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('item_key')
    )
    op.drop_table('shipped_items')
    op.drop_table('storage_tree')
    op.drop_table('purchase_order_items_new')
    op.drop_table('storage_locations')
    op.drop_table('inventory_items')
    with op.batch_alter_table('consolidation_pos', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('added_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('inventory_batch_storage', schema=None) as batch_op:
        batch_op.alter_column('allocation_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)

    with op.batch_alter_table('inventory_batches', schema=None) as batch_op:
        batch_op.alter_column('batch_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index(batch_op.f('idx_inventory_batches_item_name'))
        batch_op.drop_index(batch_op.f('idx_inventory_batches_received_date'))
        batch_op.drop_index(batch_op.f('idx_inventory_batches_source_po'))
        batch_op.create_index(batch_op.f('ix_inventory_batches_item_name'), ['item_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_batches_received_date'), ['received_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_batches_source_po_number'), ['source_po_number'], unique=False)

    with op.batch_alter_table('inventory_movements', schema=None) as batch_op:
        batch_op.alter_column('movement_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index(batch_op.f('idx_inventory_movements_batch_id'))
        batch_op.drop_index(batch_op.f('idx_inventory_movements_date'))
        batch_op.drop_index(batch_op.f('idx_inventory_movements_operator'))

    with op.batch_alter_table('item_categories', schema=None) as batch_op:
        batch_op.alter_column('category_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_unique_constraint(None, ['category_code'])

    with op.batch_alter_table('logistics_events', schema=None) as batch_op:
        batch_op.alter_column('event_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('scope_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('PO', 'CONSOLIDATION', name='scope_type_enum'),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('shipped', 'in_transit', 'customs_clearance', 'expected_arrival', 'arrived', name='logistics_status_enum'),
               existing_nullable=False)
        batch_op.alter_column('happened_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('pending_storage_items', schema=None) as batch_op:
        batch_op.alter_column('pending_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('receiving_record_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('project_supplier_expenditures', schema=None) as batch_op:
        batch_op.alter_column('record_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.alter_column('project_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('project_status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('ongoing', 'completed', name='project_status_enum'),
               existing_nullable=True,
               existing_server_default=sa.text("'ongoing'"))
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('purchase_order_items', schema=None) as batch_op:
        batch_op.alter_column('detail_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('line_status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('active', 'cancelled', 'completed', name='line_status_enum'),
               nullable=False,
               existing_server_default=sa.text("'active'"))
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=app.utils.datetime_type.CustomDateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=app.utils.datetime_type.CustomDateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_foreign_key(None, 'request_order_items', ['source_detail_id'], ['detail_id'])

    with op.batch_alter_table('purchase_orders', schema=None) as batch_op:
        batch_op.alter_column('purchase_order_no',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('purchase_status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('pending', 'confirmed', 'order_created', 'outputted', 'purchased', 'shipped', 'cancelled', name='purchase_status_enum'),
               nullable=False,
               existing_server_default=sa.text("'order_created'"))
        batch_op.alter_column('shipping_status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('none', 'not_shipped', 'shipped', 'in_transit', 'customs_clearance', 'expected_arrival', 'arrived', name='shipping_status_enum'),
               existing_nullable=True,
               existing_server_default=sa.text("'none'"))
        batch_op.alter_column('shipped_at',
               existing_type=sa.TIMESTAMP(),
               type_=app.utils.datetime_type.CustomDateTime(),
               existing_nullable=True)
        batch_op.alter_column('tax_decimal1',
               existing_type=sa.REAL(),
               type_=sa.Numeric(precision=12, scale=1),
               existing_nullable=True,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('billing_status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('none', 'pending', 'billed', 'paid', name='billing_status_enum'),
               existing_nullable=True,
               existing_server_default=sa.text("'not_billed'"))
        batch_op.alter_column('payment_method',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('remittance', 'check', 'cash', 'monthly', 'net60', name='payment_method_enum'),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=app.utils.datetime_type.CustomDateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=app.utils.datetime_type.CustomDateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('receiving_records', schema=None) as batch_op:
        batch_op.alter_column('receiving_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)

    with op.batch_alter_table('remarks_history', schema=None) as batch_op:
        batch_op.alter_column('history_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('request_order_items', schema=None) as batch_op:
        batch_op.alter_column('detail_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('item_category',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=10),
               existing_nullable=True)
        batch_op.alter_column('item_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'draft'"))
        batch_op.alter_column('supplier_id',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('material_serial_no',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('reviewed_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_foreign_key(None, 'item_categories', ['item_category'], ['category_code'])
        batch_op.create_foreign_key(None, 'suppliers', ['supplier_id'], ['supplier_id'])
        batch_op.drop_column('item_model')
        batch_op.drop_column('estimated_total')

    with op.batch_alter_table('request_orders', schema=None) as batch_op:
        batch_op.alter_column('request_order_no',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('is_urgent',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('(FALSE)'))

    with op.batch_alter_table('shipment_consolidations', schema=None) as batch_op:
        batch_op.alter_column('consolidation_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('consolidation_name',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
        batch_op.alter_column('logistics_status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('shipped', 'foreign_customs', 'taiwan_customs', 'in_transit', 'delivered', name='consolidation_logistics_status_enum'),
               nullable=False,
               existing_server_default=sa.text("'shipped'"))
        batch_op.alter_column('total_weight',
               existing_type=sa.REAL(),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
        batch_op.alter_column('total_volume',
               existing_type=sa.REAL(),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
        batch_op.alter_column('created_by',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('storage_history', schema=None) as batch_op:
        batch_op.alter_column('history_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('storage_id',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('operation_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('in', 'out', name='operation_type_enum'),
               nullable=False)
        batch_op.alter_column('operation_date',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('operator_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('quantity',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               nullable=False)
        batch_op.alter_column('source_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=30),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_storage_history_request_item'))
        batch_op.create_foreign_key(None, 'request_order_items', ['request_item_id'], ['detail_id'])
        batch_op.create_foreign_key(None, 'users', ['operator_id'], ['user_id'])
        batch_op.drop_column('created_at')
        batch_op.drop_column('notes')
        batch_op.drop_column('batch_no')
        batch_op.drop_column('item_name')
        batch_op.drop_column('material_code')

    with op.batch_alter_table('storages', schema=None) as batch_op:
        batch_op.alter_column('storage_id',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.alter_column('supplier_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('supplier_name_zh',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
        batch_op.alter_column('supplier_region',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('domestic', 'international', name='supplier_region_enum'),
               nullable=False)
        batch_op.alter_column('payment_terms',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('bank_account',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=app.utils.datetime_type.CustomDateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=app.utils.datetime_type.CustomDateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.alter_column('setting_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('setting_value',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.drop_column('is_active')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('chinese_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('department',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=False,
               existing_server_default=sa.text("'Requisitioner'"))
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=app.utils.datetime_type.CustomDateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=app.utils.datetime_type.CustomDateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_unique_constraint(None, ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('updated_at',
               existing_type=app.utils.datetime_type.CustomDateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=app.utils.datetime_type.CustomDateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('role',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'Requisitioner'"))
        batch_op.alter_column('department',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('chinese_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('1'), nullable=True))
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('setting_value',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('setting_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=app.utils.datetime_type.CustomDateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=app.utils.datetime_type.CustomDateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('bank_account',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('payment_terms',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('supplier_region',
               existing_type=sa.Enum('domestic', 'international', name='supplier_region_enum'),
               type_=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('supplier_name_zh',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
        batch_op.alter_column('supplier_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('storages', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('storage_id',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)

    with op.batch_alter_table('storage_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('material_code', sa.VARCHAR(length=50), nullable=True))
        batch_op.add_column(sa.Column('item_name', sa.VARCHAR(length=200), nullable=True))
        batch_op.add_column(sa.Column('batch_no', sa.VARCHAR(length=50), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_index(batch_op.f('idx_storage_history_request_item'), ['request_item_id'], unique=False)
        batch_op.alter_column('source_type',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('quantity',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               nullable=True)
        batch_op.alter_column('operator_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('operation_date',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('operation_type',
               existing_type=sa.Enum('in', 'out', name='operation_type_enum'),
               type_=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('item_id',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('storage_id',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('history_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('shipment_consolidations', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_by',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('total_volume',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.REAL(),
               existing_nullable=True)
        batch_op.alter_column('total_weight',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.REAL(),
               existing_nullable=True)
        batch_op.alter_column('logistics_status',
               existing_type=sa.Enum('shipped', 'foreign_customs', 'taiwan_customs', 'in_transit', 'delivered', name='consolidation_logistics_status_enum'),
               type_=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'shipped'"))
        batch_op.alter_column('consolidation_name',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
        batch_op.alter_column('consolidation_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('request_orders', schema=None) as batch_op:
        batch_op.alter_column('is_urgent',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('(FALSE)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('request_order_no',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('request_order_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('estimated_total', sa.DECIMAL(precision=15, scale=2), nullable=True))
        batch_op.add_column(sa.Column('item_model', sa.VARCHAR(length=100), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('reviewed_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('material_serial_no',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('supplier_id',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('item_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'draft'"))
        batch_op.alter_column('item_category',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('detail_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('remarks_history', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('history_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('receiving_records', schema=None) as batch_op:
        batch_op.alter_column('receiving_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('purchase_orders', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=app.utils.datetime_type.CustomDateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=app.utils.datetime_type.CustomDateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('payment_method',
               existing_type=sa.Enum('remittance', 'check', 'cash', 'monthly', 'net60', name='payment_method_enum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('billing_status',
               existing_type=sa.Enum('none', 'pending', 'billed', 'paid', name='billing_status_enum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'not_billed'"))
        batch_op.alter_column('tax_decimal1',
               existing_type=sa.Numeric(precision=12, scale=1),
               type_=sa.REAL(),
               existing_nullable=True,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('shipped_at',
               existing_type=app.utils.datetime_type.CustomDateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('shipping_status',
               existing_type=sa.Enum('none', 'not_shipped', 'shipped', 'in_transit', 'customs_clearance', 'expected_arrival', 'arrived', name='shipping_status_enum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'none'"))
        batch_op.alter_column('purchase_status',
               existing_type=sa.Enum('pending', 'confirmed', 'order_created', 'outputted', 'purchased', 'shipped', 'cancelled', name='purchase_status_enum'),
               type_=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'order_created'"))
        batch_op.alter_column('purchase_order_no',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('purchase_order_items', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('updated_at',
               existing_type=app.utils.datetime_type.CustomDateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=app.utils.datetime_type.CustomDateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('line_status',
               existing_type=sa.Enum('active', 'cancelled', 'completed', name='line_status_enum'),
               type_=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'active'"))
        batch_op.alter_column('detail_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('project_status',
               existing_type=sa.Enum('ongoing', 'completed', name='project_status_enum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'ongoing'"))
        batch_op.alter_column('project_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('project_supplier_expenditures', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('record_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('pending_storage_items', schema=None) as batch_op:
        batch_op.alter_column('receiving_record_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('pending_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('logistics_events', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('happened_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.Enum('shipped', 'in_transit', 'customs_clearance', 'expected_arrival', 'arrived', name='logistics_status_enum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('scope_type',
               existing_type=sa.Enum('PO', 'CONSOLIDATION', name='scope_type_enum'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('event_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('item_categories', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('category_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('inventory_movements', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_inventory_movements_operator'), ['operator_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_movements_date'), ['movement_date'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_movements_batch_id'), ['batch_id'], unique=False)
        batch_op.alter_column('movement_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('inventory_batches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inventory_batches_source_po_number'))
        batch_op.drop_index(batch_op.f('ix_inventory_batches_received_date'))
        batch_op.drop_index(batch_op.f('ix_inventory_batches_item_name'))
        batch_op.create_index(batch_op.f('idx_inventory_batches_source_po'), ['source_po_number'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_batches_received_date'), ['received_date'], unique=False)
        batch_op.create_index(batch_op.f('idx_inventory_batches_item_name'), ['item_name'], unique=False)
        batch_op.alter_column('batch_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('inventory_batch_storage', schema=None) as batch_op:
        batch_op.alter_column('allocation_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('consolidation_pos', schema=None) as batch_op:
        batch_op.alter_column('added_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    op.create_table('inventory_items',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('item_code', sa.VARCHAR(length=50), nullable=True),
    sa.Column('item_name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('item_category', sa.VARCHAR(length=100), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('quantity', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('unit', sa.VARCHAR(length=20), nullable=True),
    sa.Column('unit_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('warehouse_location', sa.VARCHAR(length=100), nullable=True),
    sa.Column('min_stock', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('max_stock', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'active'"), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storage_locations',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('location_code', sa.VARCHAR(length=50), nullable=True),
    sa.Column('location_name', sa.VARCHAR(length=200), nullable=True),
    sa.Column('warehouse', sa.VARCHAR(length=50), nullable=True),
    sa.Column('zone', sa.VARCHAR(length=50), nullable=True),
    sa.Column('shelf', sa.VARCHAR(length=50), nullable=True),
    sa.Column('level', sa.VARCHAR(length=50), nullable=True),
    sa.Column('position', sa.VARCHAR(length=50), nullable=True),
    sa.Column('capacity', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('occupied', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'active'"), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchase_order_items_new',
    sa.Column('line_id', sa.INTEGER(), nullable=True),
    sa.Column('po_number', sa.VARCHAR(length=50), nullable=False),
    sa.Column('product_name', sa.VARCHAR(length=200), nullable=True),
    sa.Column('specification', sa.TEXT(), nullable=True),
    sa.Column('quantity', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('unit', sa.VARCHAR(length=20), nullable=True),
    sa.Column('unit_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('subtotal', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('tax_rate', sa.DECIMAL(precision=5, scale=2), server_default=sa.text('0'), nullable=True),
    sa.Column('tax_amount', sa.DECIMAL(precision=10, scale=2), server_default=sa.text('0'), nullable=True),
    sa.Column('total_amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('requisition_number', sa.VARCHAR(length=50), nullable=True),
    sa.Column('project_code', sa.VARCHAR(length=50), nullable=True),
    sa.Column('delivery_date', sa.DATE(), nullable=True),
    sa.Column('actual_delivery_date', sa.DATE(), nullable=True),
    sa.Column('delivery_status', sa.VARCHAR(length=20), server_default=sa.text("'pending'"), nullable=True),
    sa.Column('line_status', sa.VARCHAR(length=20), server_default=sa.text("'order_created'"), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['po_number'], ['purchase_orders.po_number'], ),
    sa.PrimaryKeyConstraint('line_id')
    )
    op.create_table('storage_tree',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('node_id', sa.VARCHAR(length=50), nullable=False),
    sa.Column('parent_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('node_name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('node_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('level', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('path', sa.TEXT(), nullable=True),
    sa.Column('capacity', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('occupied', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'active'"), nullable=True),
    sa.Column('metadata', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipped_items',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('item_name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('specification', sa.TEXT(), nullable=True),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('unit', sa.VARCHAR(length=50), nullable=True),
    sa.Column('requisition_number', sa.VARCHAR(length=100), nullable=True),
    sa.Column('purchase_order_number', sa.VARCHAR(length=100), nullable=False),
    sa.Column('consolidation_number', sa.VARCHAR(length=100), nullable=True),
    sa.Column('supplier_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('supplier_name', sa.VARCHAR(length=200), nullable=True),
    sa.Column('supplier_region', sa.VARCHAR(length=50), nullable=True),
    sa.Column('delivery_status', sa.VARCHAR(length=100), nullable=True),
    sa.Column('expected_delivery_date', sa.DATE(), nullable=True),
    sa.Column('remarks', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('shipping_status', sa.VARCHAR(length=50), server_default=sa.text("'pending'"), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('inventory_items_view')
    # ### end Alembic commands ###
